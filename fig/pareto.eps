%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: pareto.pdf
%%Creator: Adobe Acrobat 17.12.0
%%For: weixu_000
%%CreationDate: 2018/5/18, 13:14:44
%%BoundingBox: -1 0 495 318
%%HiResBoundingBox: 0 0 494.2800 317.8801
%%CropBox: 0 0 494.2800 317.8801
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1077 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2018-05-18T10:03:36+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2018-05-18T13:14:35+08:00"
   xmp:MetadataDate="2018-05-18T13:14:35+08:00"
   pdf:Producer="Acrobat Distiller 17.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:453a51cb-ff9b-428e-af58-f3cd6249667f"
   xmpMM:InstanceID="uuid:a3e73794-00d7-438c-a122-5bab60d6138e">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">pareto.xlsx</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>weixu_000</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -317.88 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 317.88 li
494.28 317.88 li
494.28 0 li
cp
clp
.599979 317.4 mo
493.8 317.4 li
493.8 .47998 li
.599979 .47998 li
cp
false sop
0 0 0 0 cmyk
f
gsave
94.8 55.2 mo
478.56 55.2 li
478.56 268.32 li
94.8 268.32 li
cp
eclp
94.8 82.56 mo
95.04 82.56 li
95.04 267.12 li
94.8 267.12 li
cp
94.92 88.92 mo
95.04 88.92 li
95.04 267.12 li
94.92 267.12 li
cp
94.92 93.24 mo
95.16 93.24 li
95.16 267.12 li
94.92 267.12 li
cp
95.04 96.12 mo
95.16 96.12 li
95.16 267.12 li
95.04 267.12 li
cp
95.04 98.16 mo
95.28 98.16 li
95.28 267.12 li
95.04 267.12 li
cp
95.16 99.6 mo
95.28 99.6 li
95.28 267.12 li
95.16 267.12 li
cp
95.16 100.92 mo
95.4 100.92 li
95.4 267.12 li
95.16 267.12 li
cp
95.28 101.88 mo
95.4 101.88 li
95.4 267.12 li
95.28 267.12 li
cp
95.28 102.84 mo
95.52 102.84 li
95.52 267.12 li
95.28 267.12 li
cp
95.4 103.8 mo
95.52 103.8 li
95.52 267.12 li
95.4 267.12 li
cp
95.4 104.76 mo
95.64 104.76 li
95.64 267.12 li
95.4 267.12 li
cp
95.52 105.84 mo
95.64 105.84 li
95.64 267.12 li
95.52 267.12 li
cp
95.52 106.68 mo
95.76 106.68 li
95.76 267.12 li
95.52 267.12 li
cp
95.64 107.76 mo
95.76 107.76 li
95.76 267.12 li
95.64 267.12 li
cp
95.64 108.48 mo
95.88 108.48 li
95.88 267.12 li
95.64 267.12 li
cp
95.76 109.56 mo
95.88 109.56 li
95.88 267.12 li
95.76 267.12 li
cp
95.76 110.4 mo
96 110.4 li
96 267.12 li
95.76 267.12 li
cp
95.88 111.24 mo
96 111.24 li
96 267.12 li
95.88 267.12 li
cp
95.88 111.96 mo
96.12 111.96 li
96.12 267.12 li
95.88 267.12 li
cp
96 113.16 mo
96.12 113.16 li
96.12 267.12 li
96 267.12 li
cp
96 113.88 mo
96.24 113.88 li
96.24 267.12 li
96 267.12 li
cp
96.12 115.08 mo
96.24 115.08 li
96.24 267.12 li
96.12 267.12 li
cp
96.12 115.68 mo
96.36 115.68 li
96.36 267.12 li
96.12 267.12 li
cp
96.24 116.64 mo
96.36 116.64 li
96.36 267.12 li
96.24 267.12 li
cp
96.24 117.36 mo
96.48 117.36 li
96.48 267.12 li
96.24 267.12 li
cp
96.36 118.32 mo
96.48 118.32 li
96.48 267.12 li
96.36 267.12 li
cp
96.36 119.04 mo
96.6 119.04 li
96.6 267.12 li
96.36 267.12 li
cp
96.48 119.88 mo
96.6 119.88 li
96.6 267.12 li
96.48 267.12 li
cp
96.48 120.36 mo
96.72 120.36 li
96.72 267.12 li
96.48 267.12 li
cp
96.6 121.32 mo
96.72 121.32 li
96.72 267.12 li
96.6 267.12 li
cp
96.6 122.28 mo
96.84 122.28 li
96.84 267.12 li
96.6 267.12 li
cp
96.72 123.48 mo
96.84 123.48 li
96.84 267.12 li
96.72 267.12 li
cp
96.72 124.32 mo
96.96 124.32 li
96.96 267.12 li
96.72 267.12 li
cp
96.84 124.92 mo
96.96 124.92 li
96.96 267.12 li
96.84 267.12 li
cp
96.84 125.52 mo
97.08 125.52 li
97.08 267.12 li
96.84 267.12 li
cp
96.96 126.12 mo
97.08 126.12 li
97.08 267.12 li
96.96 267.12 li
cp
96.96 126.84 mo
97.2 126.84 li
97.2 267.12 li
96.96 267.12 li
cp
97.08 127.8 mo
97.2 127.8 li
97.2 267.12 li
97.08 267.12 li
cp
97.08 128.76 mo
97.32 128.76 li
97.32 267.12 li
97.08 267.12 li
cp
97.2 129.6 mo
97.32 129.6 li
97.32 267.12 li
97.2 267.12 li
cp
97.2 130.2 mo
97.44 130.2 li
97.44 267.12 li
97.2 267.12 li
cp
97.32 131.04 mo
97.44 131.04 li
97.44 267.12 li
97.32 267.12 li
cp
97.32 131.76 mo
97.56 131.76 li
97.56 267.12 li
97.32 267.12 li
cp
97.44 132.6 mo
97.56 132.6 li
97.56 267.12 li
97.44 267.12 li
cp
97.44 133.2 mo
97.68 133.2 li
97.68 267.12 li
97.44 267.12 li
cp
97.56 133.92 mo
97.68 133.92 li
97.68 267.12 li
97.56 267.12 li
cp
97.56 134.64 mo
97.8 134.64 li
97.8 267.12 li
97.56 267.12 li
cp
97.68 135.36 mo
97.8 135.36 li
97.8 267.12 li
97.68 267.12 li
cp
97.68 135.96 mo
97.92 135.96 li
97.92 267.12 li
97.68 267.12 li
cp
97.8 136.56 mo
97.92 136.56 li
97.92 267.12 li
97.8 267.12 li
cp
97.8 137.16 mo
98.04 137.16 li
98.04 267.12 li
97.8 267.12 li
cp
97.92 137.88 mo
98.04 137.88 li
98.04 267.12 li
97.92 267.12 li
cp
97.92 138.48 mo
98.16 138.48 li
98.16 267.12 li
97.92 267.12 li
cp
98.04 139.32 mo
98.16 139.32 li
98.16 267.12 li
98.04 267.12 li
cp
98.04 139.92 mo
98.28 139.92 li
98.28 267.12 li
98.04 267.12 li
cp
98.16 140.88 mo
98.28 140.88 li
98.28 267.12 li
98.16 267.12 li
cp
98.16 141.48 mo
98.4 141.48 li
98.4 267.12 li
98.16 267.12 li
cp
98.28 142.56 mo
98.4 142.56 li
98.4 267.12 li
98.28 267.12 li
cp
98.28 143.16 mo
98.52 143.16 li
98.52 267.12 li
98.28 267.12 li
cp
98.4 143.76 mo
98.52 143.76 li
98.52 267.12 li
98.4 267.12 li
cp
98.4 144.36 mo
98.64 144.36 li
98.64 267.12 li
98.4 267.12 li
cp
98.52 144.96 mo
98.64 144.96 li
98.64 267.12 li
98.52 267.12 li
cp
98.52 145.68 mo
98.76 145.68 li
98.76 267.12 li
98.52 267.12 li
cp
98.64 146.28 mo
98.76 146.28 li
98.76 267.12 li
98.64 267.12 li
cp
98.64 146.76 mo
98.88 146.76 li
98.88 267.12 li
98.64 267.12 li
cp
98.76 147.6 mo
98.88 147.6 li
98.88 267.12 li
98.76 267.12 li
cp
98.76 148.2 mo
99 148.2 li
99 267.12 li
98.76 267.12 li
cp
98.88 148.68 mo
99 148.68 li
99 267.12 li
98.88 267.12 li
cp
98.88 149.28 mo
99.12 149.28 li
99.12 267.12 li
98.88 267.12 li
cp
99 149.88 mo
99.12 149.88 li
99.12 267.12 li
99 267.12 li
cp
99 150.48 mo
99.24 150.48 li
99.24 267.12 li
99 267.12 li
cp
99.12 151.2 mo
99.24 151.2 li
99.24 267.12 li
99.12 267.12 li
cp
99.12 151.8 mo
99.36 151.8 li
99.36 267.12 li
99.12 267.12 li
cp
99.24 152.4 mo
99.36 152.4 li
99.36 267.12 li
99.24 267.12 li
cp
99.24 152.88 mo
99.48 152.88 li
99.48 267.12 li
99.24 267.12 li
cp
99.36 153.6 mo
99.48 153.6 li
99.48 267.12 li
99.36 267.12 li
cp
99.36 154.2 mo
99.6 154.2 li
99.6 267.12 li
99.36 267.12 li
cp
99.48 154.68 mo
99.6 154.68 li
99.6 267.12 li
99.48 267.12 li
cp
99.48 155.16 mo
99.72 155.16 li
99.72 267.12 li
99.48 267.12 li
cp
99.6 155.76 mo
99.72 155.76 li
99.72 267.12 li
99.6 267.12 li
cp
99.6 156.36 mo
99.84 156.36 li
99.84 267.12 li
99.6 267.12 li
cp
99.72 157.2 mo
99.84 157.2 li
99.84 267.12 li
99.72 267.12 li
cp
99.72 157.68 mo
99.96 157.68 li
99.96 267.12 li
99.72 267.12 li
cp
99.84 158.52 mo
99.96 158.52 li
99.96 267.12 li
99.84 267.12 li
cp
99.84 159 mo
100.08 159 li
100.08 267.12 li
99.84 267.12 li
cp
99.96 159.36 mo
100.08 159.36 li
100.08 267.12 li
99.96 267.12 li
cp
99.96 159.84 mo
100.2 159.84 li
100.2 267.12 li
99.96 267.12 li
cp
100.08 160.56 mo
100.2 160.56 li
100.2 267.12 li
100.08 267.12 li
cp
100.08 161.04 mo
100.32 161.04 li
100.32 267.12 li
100.08 267.12 li
cp
100.2 161.76 mo
100.32 161.76 li
100.32 267.12 li
100.2 267.12 li
cp
100.2 162.24 mo
100.44 162.24 li
100.44 267.12 li
100.2 267.12 li
cp
100.32 162.72 mo
100.44 162.72 li
100.44 267.12 li
100.32 267.12 li
cp
100.32 163.2 mo
100.56 163.2 li
100.56 267.12 li
100.32 267.12 li
cp
100.44 163.8 mo
100.56 163.8 li
100.56 267.12 li
100.44 267.12 li
cp
100.44 164.28 mo
100.68 164.28 li
100.68 267.12 li
100.44 267.12 li
cp
100.56 164.76 mo
100.68 164.76 li
100.68 267.12 li
100.56 267.12 li
cp
100.56 165.24 mo
100.8 165.24 li
100.8 267.12 li
100.56 267.12 li
cp
100.68 165.72 mo
100.8 165.72 li
100.8 267.12 li
100.68 267.12 li
cp
100.68 166.08 mo
100.92 166.08 li
100.92 267.12 li
100.68 267.12 li
cp
100.8 166.56 mo
100.92 166.56 li
100.92 267.12 li
100.8 267.12 li
cp
100.8 166.92 mo
101.04 166.92 li
101.04 267.12 li
100.8 267.12 li
cp
100.92 167.4 mo
101.04 167.4 li
101.04 267.12 li
100.92 267.12 li
cp
100.92 167.76 mo
101.16 167.76 li
101.16 267.12 li
100.92 267.12 li
cp
101.04 168.24 mo
101.16 168.24 li
101.16 267.12 li
101.04 267.12 li
cp
101.04 168.6 mo
101.28 168.6 li
101.28 267.12 li
101.04 267.12 li
cp
101.16 169.08 mo
101.28 169.08 li
101.28 267.12 li
101.16 267.12 li
cp
101.16 169.68 mo
101.4 169.68 li
101.4 267.12 li
101.16 267.12 li
cp
101.28 170.28 mo
101.4 170.28 li
101.4 267.12 li
101.28 267.12 li
cp
101.28 170.64 mo
101.52 170.64 li
101.52 267.12 li
101.28 267.12 li
cp
101.4 171.12 mo
101.52 171.12 li
101.52 267.12 li
101.4 267.12 li
cp
101.4 171.48 mo
101.64 171.48 li
101.64 267.12 li
101.4 267.12 li
cp
101.52 172.08 mo
101.64 172.08 li
101.64 267.12 li
101.52 267.12 li
cp
101.52 172.68 mo
101.76 172.68 li
101.76 267.12 li
101.52 267.12 li
cp
101.64 173.16 mo
101.76 173.16 li
101.76 267.12 li
101.64 267.12 li
cp
101.64 173.64 mo
101.88 173.64 li
101.88 267.12 li
101.64 267.12 li
cp
101.76 174.12 mo
101.88 174.12 li
101.88 267.12 li
101.76 267.12 li
cp
101.76 174.6 mo
102 174.6 li
102 267.12 li
101.76 267.12 li
cp
101.88 175.08 mo
102 175.08 li
102 267.12 li
101.88 267.12 li
cp
101.88 175.44 mo
102.12 175.44 li
102.12 267.12 li
101.88 267.12 li
cp
102 175.92 mo
102.12 175.92 li
102.12 267.12 li
102 267.12 li
cp
102 176.28 mo
102.24 176.28 li
102.24 267.12 li
102 267.12 li
cp
102.12 176.64 mo
102.24 176.64 li
102.24 267.12 li
102.12 267.12 li
cp
102.12 177.12 mo
102.36 177.12 li
102.36 267.12 li
102.12 267.12 li
cp
102.24 177.48 mo
102.36 177.48 li
102.36 267.12 li
102.24 267.12 li
cp
102.24 177.96 mo
102.48 177.96 li
102.48 267.12 li
102.24 267.12 li
cp
102.36 178.32 mo
102.48 178.32 li
102.48 267.12 li
102.36 267.12 li
cp
102.36 178.68 mo
102.6 178.68 li
102.6 267.12 li
102.36 267.12 li
cp
102.48 179.04 mo
102.6 179.04 li
102.6 267.12 li
102.48 267.12 li
cp
102.48 179.52 mo
102.72 179.52 li
102.72 267.12 li
102.48 267.12 li
cp
102.6 180.12 mo
102.72 180.12 li
102.72 267.12 li
102.6 267.12 li
cp
102.6 180.48 mo
102.84 180.48 li
102.84 267.12 li
102.6 267.12 li
cp
102.72 180.96 mo
102.84 180.96 li
102.84 267.12 li
102.72 267.12 li
cp
102.72 181.2 mo
102.96 181.2 li
102.96 267.12 li
102.72 267.12 li
cp
102.84 181.68 mo
102.96 181.68 li
102.96 267.12 li
102.84 267.12 li
cp
102.84 182.16 mo
103.08 182.16 li
103.08 267.12 li
102.84 267.12 li
cp
102.96 182.64 mo
103.08 182.64 li
103.08 267.12 li
102.96 267.12 li
cp
102.96 182.88 mo
103.2 182.88 li
103.2 267.12 li
102.96 267.12 li
cp
103.08 183.36 mo
103.2 183.36 li
103.2 267.12 li
103.08 267.12 li
cp
103.08 183.6 mo
103.32 183.6 li
103.32 267.12 li
103.08 267.12 li
cp
103.2 184.08 mo
103.32 184.08 li
103.32 267.12 li
103.2 267.12 li
cp
103.2 184.44 mo
103.44 184.44 li
103.44 267.12 li
103.2 267.12 li
cp
103.32 184.8 mo
103.44 184.8 li
103.44 267.12 li
103.32 267.12 li
cp
103.32 185.16 mo
103.56 185.16 li
103.56 267.12 li
103.32 267.12 li
cp
103.44 185.52 mo
103.56 185.52 li
103.56 267.12 li
103.44 267.12 li
cp
103.44 185.88 mo
103.68 185.88 li
103.68 267.12 li
103.44 267.12 li
cp
103.56 186.36 mo
103.68 186.36 li
103.68 267.12 li
103.56 267.12 li
cp
103.56 186.48 mo
103.8 186.48 li
103.8 267.12 li
103.56 267.12 li
cp
103.68 186.84 mo
103.8 186.84 li
103.8 267.12 li
103.68 267.12 li
cp
103.68 187.2 mo
103.92 187.2 li
103.92 267.12 li
103.68 267.12 li
cp
103.8 187.8 mo
103.92 187.8 li
103.92 267.12 li
103.8 267.12 li
cp
103.8 188.04 mo
104.04 188.04 li
104.04 267.12 li
103.8 267.12 li
cp
103.92 188.52 mo
104.04 188.52 li
104.04 267.12 li
103.92 267.12 li
cp
103.92 188.76 mo
104.16 188.76 li
104.16 267.12 li
103.92 267.12 li
cp
104.04 189.12 mo
104.16 189.12 li
104.16 267.12 li
104.04 267.12 li
cp
104.04 189.48 mo
104.28 189.48 li
104.28 267.12 li
104.04 267.12 li
cp
104.16 189.84 mo
104.28 189.84 li
104.28 267.12 li
104.16 267.12 li
cp
104.16 190.08 mo
104.4 190.08 li
104.4 267.12 li
104.16 267.12 li
cp
104.28 190.44 mo
104.4 190.44 li
104.4 267.12 li
104.28 267.12 li
cp
104.28 190.8 mo
104.52 190.8 li
104.52 267.12 li
104.28 267.12 li
cp
104.4 191.16 mo
104.52 191.16 li
104.52 267.12 li
104.4 267.12 li
cp
104.4 191.52 mo
104.64 191.52 li
104.64 267.12 li
104.4 267.12 li
cp
104.52 191.88 mo
104.64 191.88 li
104.64 267.12 li
104.52 267.12 li
cp
104.52 192 mo
104.76 192 li
104.76 267.12 li
104.52 267.12 li
cp
104.64 192.36 mo
104.76 192.36 li
104.76 267.12 li
104.64 267.12 li
cp
104.64 192.72 mo
104.88 192.72 li
104.88 267.12 li
104.64 267.12 li
cp
104.76 193.08 mo
104.88 193.08 li
104.88 267.12 li
104.76 267.12 li
cp
104.76 193.32 mo
105 193.32 li
105 267.12 li
104.76 267.12 li
cp
104.88 193.68 mo
105 193.68 li
105 267.12 li
104.88 267.12 li
cp
104.88 194.04 mo
105.12 194.04 li
105.12 267.12 li
104.88 267.12 li
cp
105 194.52 mo
105.12 194.52 li
105.12 267.12 li
105 267.12 li
cp
105 194.76 mo
105.24 194.76 li
105.24 267.12 li
105 267.12 li
cp
105.12 195 mo
105.24 195 li
105.24 267.12 li
105.12 267.12 li
cp
105.12 195.24 mo
105.36 195.24 li
105.36 267.12 li
105.12 267.12 li
cp
105.24 195.6 mo
105.36 195.6 li
105.36 267.12 li
105.24 267.12 li
cp
105.24 195.96 mo
105.48 195.96 li
105.48 267.12 li
105.24 267.12 li
cp
105.36 196.32 mo
105.48 196.32 li
105.48 267.12 li
105.36 267.12 li
cp
105.36 196.68 mo
105.6 196.68 li
105.6 267.12 li
105.36 267.12 li
cp
105.48 197.04 mo
105.6 197.04 li
105.6 267.12 li
105.48 267.12 li
cp
105.48 197.4 mo
105.72 197.4 li
105.72 267.12 li
105.48 267.12 li
cp
105.6 197.76 mo
105.72 197.76 li
105.72 267.12 li
105.6 267.12 li
cp
105.6 198 mo
105.84 198 li
105.84 267.12 li
105.6 267.12 li
cp
105.72 198.24 mo
105.84 198.24 li
105.84 267.12 li
105.72 267.12 li
cp
105.72 198.6 mo
105.96 198.6 li
105.96 267.12 li
105.72 267.12 li
cp
105.84 198.96 mo
105.96 198.96 li
105.96 267.12 li
105.84 267.12 li
cp
105.84 199.2 mo
106.08 199.2 li
106.08 267.12 li
105.84 267.12 li
cp
105.96 199.44 mo
106.08 199.44 li
106.08 267.12 li
105.96 267.12 li
cp
105.96 199.68 mo
106.2 199.68 li
106.2 267.12 li
105.96 267.12 li
cp
106.08 200.04 mo
106.2 200.04 li
106.2 267.12 li
106.08 267.12 li
cp
106.08 200.4 mo
106.32 200.4 li
106.32 267.12 li
106.08 267.12 li
cp
106.2 200.76 mo
106.32 200.76 li
106.32 267.12 li
106.2 267.12 li
cp
106.2 201.12 mo
106.44 201.12 li
106.44 267.12 li
106.2 267.12 li
cp
106.32 201.36 mo
106.44 201.36 li
106.44 267.12 li
106.32 267.12 li
cp
106.32 201.72 mo
106.56 201.72 li
106.56 267.12 li
106.32 267.12 li
cp
106.44 201.96 mo
106.56 201.96 li
106.56 267.12 li
106.44 267.12 li
cp
106.44 202.2 mo
106.68 202.2 li
106.68 267.12 li
106.44 267.12 li
cp
106.56 202.56 mo
106.68 202.56 li
106.68 267.12 li
106.56 267.12 li
cp
106.56 202.8 mo
106.8 202.8 li
106.8 267.12 li
106.56 267.12 li
cp
106.68 203.04 mo
106.8 203.04 li
106.8 267.12 li
106.68 267.12 li
cp
106.68 203.28 mo
106.92 203.28 li
106.92 267.12 li
106.68 267.12 li
cp
106.8 203.64 mo
106.92 203.64 li
106.92 267.12 li
106.8 267.12 li
cp
106.8 203.88 mo
107.04 203.88 li
107.04 267.12 li
106.8 267.12 li
cp
106.92 204.12 mo
107.04 204.12 li
107.04 267.12 li
106.92 267.12 li
cp
106.92 204.36 mo
107.16 204.36 li
107.16 267.12 li
106.92 267.12 li
cp
107.04 204.6 mo
107.16 204.6 li
107.16 267.12 li
107.04 267.12 li
cp
107.04 204.84 mo
107.28 204.84 li
107.28 267.12 li
107.04 267.12 li
cp
107.16 205.2 mo
107.28 205.2 li
107.28 267.12 li
107.16 267.12 li
cp
107.16 205.44 mo
107.4 205.44 li
107.4 267.12 li
107.16 267.12 li
cp
107.28 205.68 mo
107.4 205.68 li
107.4 267.12 li
107.28 267.12 li
cp
107.28 205.92 mo
107.52 205.92 li
107.52 267.12 li
107.28 267.12 li
cp
107.4 206.16 mo
107.52 206.16 li
107.52 267.12 li
107.4 267.12 li
cp
107.4 206.4 mo
107.64 206.4 li
107.64 267.12 li
107.4 267.12 li
cp
107.52 206.64 mo
107.64 206.64 li
107.64 267.12 li
107.52 267.12 li
cp
107.52 206.88 mo
107.76 206.88 li
107.76 267.12 li
107.52 267.12 li
cp
107.64 207.12 mo
107.76 207.12 li
107.76 267.12 li
107.64 267.12 li
cp
107.64 207.48 mo
107.88 207.48 li
107.88 267.12 li
107.64 267.12 li
cp
107.76 207.84 mo
107.88 207.84 li
107.88 267.12 li
107.76 267.12 li
cp
107.76 208.08 mo
108 208.08 li
108 267.12 li
107.76 267.12 li
cp
107.88 208.32 mo
108 208.32 li
108 267.12 li
107.88 267.12 li
cp
107.88 208.56 mo
108.12 208.56 li
108.12 267.12 li
107.88 267.12 li
cp
108 208.8 mo
108.12 208.8 li
108.12 267.12 li
108 267.12 li
cp
108 209.04 mo
108.24 209.04 li
108.24 267.12 li
108 267.12 li
cp
108.12 209.28 mo
108.24 209.28 li
108.24 267.12 li
108.12 267.12 li
cp
108.12 209.52 mo
108.36 209.52 li
108.36 267.12 li
108.12 267.12 li
cp
108.24 209.76 mo
108.36 209.76 li
108.36 267.12 li
108.24 267.12 li
cp
108.24 209.88 mo
108.48 209.88 li
108.48 267.12 li
108.24 267.12 li
cp
108.36 210.12 mo
108.48 210.12 li
108.48 267.12 li
108.36 267.12 li
cp
108.36 210.36 mo
108.6 210.36 li
108.6 267.12 li
108.36 267.12 li
cp
108.48 210.6 mo
108.6 210.6 li
108.6 267.12 li
108.48 267.12 li
cp
108.48 210.72 mo
108.72 210.72 li
108.72 267.12 li
108.48 267.12 li
cp
108.6 211.08 mo
108.72 211.08 li
108.72 267.12 li
108.6 267.12 li
cp
108.6 211.2 mo
108.84 211.2 li
108.84 267.12 li
108.6 267.12 li
cp
108.72 211.44 mo
108.84 211.44 li
108.84 267.12 li
108.72 267.12 li
cp
108.72 211.56 mo
108.96 211.56 li
108.96 267.12 li
108.72 267.12 li
cp
108.84 211.68 mo
108.96 211.68 li
108.96 267.12 li
108.84 267.12 li
cp
108.84 211.92 mo
109.08 211.92 li
109.08 267.12 li
108.84 267.12 li
cp
108.96 212.16 mo
109.08 212.16 li
109.08 267.12 li
108.96 267.12 li
cp
108.96 212.4 mo
109.2 212.4 li
109.2 267.12 li
108.96 267.12 li
cp
109.08 212.64 mo
109.2 212.64 li
109.2 267.12 li
109.08 267.12 li
cp
109.08 212.88 mo
109.32 212.88 li
109.32 267.12 li
109.08 267.12 li
cp
109.2 213.12 mo
109.32 213.12 li
109.32 267.12 li
109.2 267.12 li
cp
109.2 213.24 mo
109.44 213.24 li
109.44 267.12 li
109.2 267.12 li
cp
109.32 213.6 mo
109.44 213.6 li
109.44 267.12 li
109.32 267.12 li
cp
109.32 213.72 mo
109.56 213.72 li
109.56 267.12 li
109.32 267.12 li
cp
109.44 213.96 mo
109.56 213.96 li
109.56 267.12 li
109.44 267.12 li
cp
109.44 214.2 mo
109.68 214.2 li
109.68 267.12 li
109.44 267.12 li
cp
109.56 214.32 mo
109.68 214.32 li
109.68 267.12 li
109.56 267.12 li
cp
109.56 214.56 mo
109.8 214.56 li
109.8 267.12 li
109.56 267.12 li
cp
109.68 214.68 mo
109.8 214.68 li
109.8 267.12 li
109.68 267.12 li
cp
109.68 214.92 mo
109.92 214.92 li
109.92 267.12 li
109.68 267.12 li
cp
109.8 215.16 mo
109.92 215.16 li
109.92 267.12 li
109.8 267.12 li
cp
109.8 215.28 mo
110.04 215.28 li
110.04 267.12 li
109.8 267.12 li
cp
109.92 215.52 mo
110.04 215.52 li
110.04 267.12 li
109.92 267.12 li
cp
109.92 215.64 mo
110.16 215.64 li
110.16 267.12 li
109.92 267.12 li
cp
110.04 215.88 mo
110.16 215.88 li
110.16 267.12 li
110.04 267.12 li
cp
110.04 216.12 mo
110.28 216.12 li
110.28 267.12 li
110.04 267.12 li
cp
110.16 216.36 mo
110.28 216.36 li
110.28 267.12 li
110.16 267.12 li
cp
110.16 216.6 mo
110.4 216.6 li
110.4 267.12 li
110.16 267.12 li
cp
110.28 216.72 mo
110.4 216.72 li
110.4 267.12 li
110.28 267.12 li
cp
110.28 216.96 mo
110.52 216.96 li
110.52 267.12 li
110.28 267.12 li
cp
110.4 217.2 mo
110.52 217.2 li
110.52 267.12 li
110.4 267.12 li
cp
110.4 217.32 mo
110.64 217.32 li
110.64 267.12 li
110.4 267.12 li
cp
110.52 217.56 mo
110.64 217.56 li
110.64 267.12 li
110.52 267.12 li
cp
110.52 217.8 mo
110.76 217.8 li
110.76 267.12 li
110.52 267.12 li
cp
110.64 218.04 mo
110.76 218.04 li
110.76 267.12 li
110.64 267.12 li
cp
110.64 218.16 mo
110.88 218.16 li
110.88 267.12 li
110.64 267.12 li
cp
110.76 218.4 mo
110.88 218.4 li
110.88 267.12 li
110.76 267.12 li
cp
110.76 218.52 mo
111 218.52 li
111 267.12 li
110.76 267.12 li
cp
110.88 218.76 mo
111 218.76 li
111 267.12 li
110.88 267.12 li
cp
110.88 219 mo
111.12 219 li
111.12 267.12 li
110.88 267.12 li
cp
111 219.24 mo
111.12 219.24 li
111.12 267.12 li
111 267.12 li
cp
111 219.36 mo
111.24 219.36 li
111.24 267.12 li
111 267.12 li
cp
111.12 219.6 mo
111.24 219.6 li
111.24 267.12 li
111.12 267.12 li
cp
111.12 219.72 mo
111.36 219.72 li
111.36 267.12 li
111.12 267.12 li
cp
111.24 219.96 mo
111.36 219.96 li
111.36 267.12 li
111.24 267.12 li
cp
111.24 220.08 mo
111.48 220.08 li
111.48 267.12 li
111.24 267.12 li
cp
111.36 220.32 mo
111.48 220.32 li
111.48 267.12 li
111.36 267.12 li
cp
111.36 220.44 mo
111.6 220.44 li
111.6 267.12 li
111.36 267.12 li
cp
111.48 220.8 mo
111.6 220.8 li
111.6 267.12 li
111.48 267.12 li
cp
111.48 220.92 mo
111.72 220.92 li
111.72 267.12 li
111.48 267.12 li
cp
111.6 221.04 mo
111.72 221.04 li
111.72 267.12 li
111.6 267.12 li
cp
111.6 221.28 mo
111.84 221.28 li
111.84 267.12 li
111.6 267.12 li
cp
111.72 221.4 mo
111.84 221.4 li
111.84 267.12 li
111.72 267.12 li
cp
111.72 221.52 mo
111.96 221.52 li
111.96 267.12 li
111.72 267.12 li
cp
111.84 221.76 mo
111.96 221.76 li
111.96 267.12 li
111.84 267.12 li
cp
111.84 221.88 mo
112.08 221.88 li
112.08 267.12 li
111.84 267.12 li
cp
111.96 222 mo
112.08 222 li
112.08 267.12 li
111.96 267.12 li
cp
111.96 222.24 mo
112.2 222.24 li
112.2 267.12 li
111.96 267.12 li
cp
112.08 222.36 mo
112.2 222.36 li
112.2 267.12 li
112.08 267.12 li
cp
112.08 222.6 mo
112.32 222.6 li
112.32 267.12 li
112.08 267.12 li
cp
112.2 222.72 mo
112.32 222.72 li
112.32 267.12 li
112.2 267.12 li
cp
112.2 222.96 mo
112.44 222.96 li
112.44 267.12 li
112.2 267.12 li
cp
112.32 223.08 mo
112.44 223.08 li
112.44 267.12 li
112.32 267.12 li
cp
112.32 223.2 mo
112.56 223.2 li
112.56 267.12 li
112.32 267.12 li
cp
112.44 223.44 mo
112.56 223.44 li
112.56 267.12 li
112.44 267.12 li
cp
112.44 223.56 mo
112.68 223.56 li
112.68 267.12 li
112.44 267.12 li
cp
112.56 223.68 mo
112.68 223.68 li
112.68 267.12 li
112.56 267.12 li
cp
112.56 223.8 mo
112.8 223.8 li
112.8 267.12 li
112.56 267.12 li
cp
112.68 224.04 mo
112.8 224.04 li
112.8 267.12 li
112.68 267.12 li
cp
112.68 224.16 mo
112.92 224.16 li
112.92 267.12 li
112.68 267.12 li
cp
112.8 224.4 mo
112.92 224.4 li
112.92 267.12 li
112.8 267.12 li
cp
112.8 224.52 mo
113.04 224.52 li
113.04 267.12 li
112.8 267.12 li
cp
112.92 224.76 mo
113.04 224.76 li
113.04 267.12 li
112.92 267.12 li
cp
112.92 224.88 mo
113.16 224.88 li
113.16 267.12 li
112.92 267.12 li
cp
113.04 225 mo
113.16 225 li
113.16 267.12 li
113.04 267.12 li
cp
113.04 225.12 mo
113.28 225.12 li
113.28 267.12 li
113.04 267.12 li
cp
113.16 225.36 mo
113.28 225.36 li
113.28 267.12 li
113.16 267.12 li
cp
113.16 225.48 mo
113.4 225.48 li
113.4 267.12 li
113.16 267.12 li
cp
113.28 225.6 mo
113.4 225.6 li
113.4 267.12 li
113.28 267.12 li
cp
113.28 225.84 mo
113.52 225.84 li
113.52 267.12 li
113.28 267.12 li
cp
113.4 225.96 mo
113.52 225.96 li
113.52 267.12 li
113.4 267.12 li
cp
113.4 226.08 mo
113.64 226.08 li
113.64 267.12 li
113.4 267.12 li
cp
113.52 226.32 mo
113.64 226.32 li
113.64 267.12 li
113.52 267.12 li
cp
113.52 226.44 mo
113.76 226.44 li
113.76 267.12 li
113.52 267.12 li
cp
113.64 226.56 mo
113.76 226.56 li
113.76 267.12 li
113.64 267.12 li
cp
113.64 226.8 mo
113.88 226.8 li
113.88 267.12 li
113.64 267.12 li
cp
113.76 226.92 mo
113.88 226.92 li
113.88 267.12 li
113.76 267.12 li
cp
113.76 227.04 mo
114 227.04 li
114 267.12 li
113.76 267.12 li
cp
113.88 227.16 mo
114 227.16 li
114 267.12 li
113.88 267.12 li
cp
113.88 227.28 mo
114.12 227.28 li
114.12 267.12 li
113.88 267.12 li
cp
114 227.4 mo
114.12 227.4 li
114.12 267.12 li
114 267.12 li
cp
114 227.52 mo
114.24 227.52 li
114.24 267.12 li
114 267.12 li
cp
114.12 227.76 mo
114.24 227.76 li
114.24 267.12 li
114.12 267.12 li
cp
114.12 227.88 mo
114.36 227.88 li
114.36 267.12 li
114.12 267.12 li
cp
114.24 228 mo
114.36 228 li
114.36 267.12 li
114.24 267.12 li
cp
114.24 228.12 mo
114.48 228.12 li
114.48 267.12 li
114.24 267.12 li
cp
114.36 228.24 mo
114.48 228.24 li
114.48 267.12 li
114.36 267.12 li
cp
114.36 228.48 mo
114.6 228.48 li
114.6 267.12 li
114.36 267.12 li
cp
114.48 228.6 mo
114.6 228.6 li
114.6 267.12 li
114.48 267.12 li
cp
114.48 228.72 mo
114.72 228.72 li
114.72 267.12 li
114.48 267.12 li
cp
114.6 228.84 mo
114.72 228.84 li
114.72 267.12 li
114.6 267.12 li
cp
114.6 228.96 mo
114.84 228.96 li
114.84 267.12 li
114.6 267.12 li
cp
114.72 229.08 mo
114.84 229.08 li
114.84 267.12 li
114.72 267.12 li
cp
114.72 229.2 mo
114.96 229.2 li
114.96 267.12 li
114.72 267.12 li
cp
114.84 229.32 mo
114.96 229.32 li
114.96 267.12 li
114.84 267.12 li
cp
114.84 229.44 mo
115.08 229.44 li
115.08 267.12 li
114.84 267.12 li
cp
114.96 229.56 mo
115.08 229.56 li
115.08 267.12 li
114.96 267.12 li
cp
114.96 229.68 mo
115.2 229.68 li
115.2 267.12 li
114.96 267.12 li
cp
115.08 229.8 mo
115.2 229.8 li
115.2 267.12 li
115.08 267.12 li
cp
115.08 229.92 mo
115.32 229.92 li
115.32 267.12 li
115.08 267.12 li
cp
115.2 230.04 mo
115.32 230.04 li
115.32 267.12 li
115.2 267.12 li
cp
115.2 230.16 mo
115.44 230.16 li
115.44 267.12 li
115.2 267.12 li
cp
115.32 230.28 mo
115.44 230.28 li
115.44 267.12 li
115.32 267.12 li
cp
115.32 230.4 mo
115.56 230.4 li
115.56 267.12 li
115.32 267.12 li
cp
115.44 230.52 mo
115.56 230.52 li
115.56 267.12 li
115.44 267.12 li
cp
115.44 230.64 mo
115.68 230.64 li
115.68 267.12 li
115.44 267.12 li
cp
115.56 230.76 mo
115.68 230.76 li
115.68 267.12 li
115.56 267.12 li
cp
115.56 230.88 mo
115.8 230.88 li
115.8 267.12 li
115.56 267.12 li
cp
115.68 231 mo
115.8 231 li
115.8 267.12 li
115.68 267.12 li
cp
115.68 231.12 mo
115.92 231.12 li
115.92 267.12 li
115.68 267.12 li
cp
115.8 231.24 mo
115.92 231.24 li
115.92 267.12 li
115.8 267.12 li
cp
115.8 231.36 mo
116.04 231.36 li
116.04 267.12 li
115.8 267.12 li
cp
115.92 231.48 mo
116.04 231.48 li
116.04 267.12 li
115.92 267.12 li
cp
115.92 231.6 mo
116.16 231.6 li
116.16 267.12 li
115.92 267.12 li
cp
116.04 231.72 mo
116.16 231.72 li
116.16 267.12 li
116.04 267.12 li
cp
116.04 231.84 mo
116.28 231.84 li
116.28 267.12 li
116.04 267.12 li
cp
116.16 231.96 mo
116.28 231.96 li
116.28 267.12 li
116.16 267.12 li
cp
116.16 232.08 mo
116.4 232.08 li
116.4 267.12 li
116.16 267.12 li
cp
116.28 232.2 mo
116.4 232.2 li
116.4 267.12 li
116.28 267.12 li
cp
116.28 232.32 mo
116.52 232.32 li
116.52 267.12 li
116.28 267.12 li
cp
116.4 232.44 mo
116.52 232.44 li
116.52 267.12 li
116.4 267.12 li
cp
116.4 232.56 mo
116.64 232.56 li
116.64 267.12 li
116.4 267.12 li
cp
116.52 232.68 mo
116.64 232.68 li
116.64 267.12 li
116.52 267.12 li
cp
116.52 232.8 mo
116.76 232.8 li
116.76 267.12 li
116.52 267.12 li
cp
116.64 232.92 mo
116.76 232.92 li
116.76 267.12 li
116.64 267.12 li
cp
116.64 233.04 mo
116.88 233.04 li
116.88 267.12 li
116.64 267.12 li
cp
116.76 233.16 mo
116.88 233.16 li
116.88 267.12 li
116.76 267.12 li
cp
116.76 233.28 mo
117 233.28 li
117 267.12 li
116.76 267.12 li
cp
116.88 233.4 mo
117 233.4 li
117 267.12 li
116.88 267.12 li
cp
116.88 233.52 mo
117.12 233.52 li
117.12 267.12 li
116.88 267.12 li
cp
117 233.64 mo
117.12 233.64 li
117.12 267.12 li
117 267.12 li
cp
117 233.76 mo
117.24 233.76 li
117.24 267.12 li
117 267.12 li
cp
117.12 233.88 mo
117.24 233.88 li
117.24 267.12 li
117.12 267.12 li
cp
117.12 234 mo
117.36 234 li
117.36 267.12 li
117.12 267.12 li
cp
117.24 234.12 mo
117.36 234.12 li
117.36 267.12 li
117.24 267.12 li
cp
117.24 234.24 mo
117.48 234.24 li
117.48 267.12 li
117.24 267.12 li
cp
117.36 234.36 mo
117.48 234.36 li
117.48 267.12 li
117.36 267.12 li
cp
117.36 234.48 mo
117.6 234.48 li
117.6 267.12 li
117.36 267.12 li
cp
117.48 234.6 mo
117.6 234.6 li
117.6 267.12 li
117.48 267.12 li
cp
117.48 234.72 mo
117.72 234.72 li
117.72 267.12 li
117.48 267.12 li
cp
117.6 234.84 mo
117.72 234.84 li
117.72 267.12 li
117.6 267.12 li
cp
117.6 234.96 mo
117.84 234.96 li
117.84 267.12 li
117.6 267.12 li
cp
117.72 235.08 mo
117.84 235.08 li
117.84 267.12 li
117.72 267.12 li
cp
117.72 235.2 mo
117.96 235.2 li
117.96 267.12 li
117.72 267.12 li
cp
117.84 235.32 mo
117.96 235.32 li
117.96 267.12 li
117.84 267.12 li
cp
117.84 235.44 mo
118.08 235.44 li
118.08 267.12 li
117.84 267.12 li
cp
117.96 235.56 mo
118.08 235.56 li
118.08 267.12 li
117.96 267.12 li
cp
117.96 235.68 mo
118.2 235.68 li
118.2 267.12 li
117.96 267.12 li
cp
118.08 235.8 mo
118.32 235.8 li
118.32 267.12 li
118.08 267.12 li
cp
118.2 235.92 mo
118.32 235.92 li
118.32 267.12 li
118.2 267.12 li
cp
118.2 236.04 mo
118.44 236.04 li
118.44 267.12 li
118.2 267.12 li
cp
118.32 236.16 mo
118.44 236.16 li
118.44 267.12 li
118.32 267.12 li
cp
118.32 236.28 mo
118.56 236.28 li
118.56 267.12 li
118.32 267.12 li
cp
118.44 236.4 mo
118.68 236.4 li
118.68 267.12 li
118.44 267.12 li
cp
118.56 236.52 mo
118.68 236.52 li
118.68 267.12 li
118.56 267.12 li
cp
118.56 236.64 mo
118.8 236.64 li
118.8 267.12 li
118.56 267.12 li
cp
118.68 236.76 mo
118.92 236.76 li
118.92 267.12 li
118.68 267.12 li
cp
118.8 236.88 mo
118.92 236.88 li
118.92 267.12 li
118.8 267.12 li
cp
118.8 237 mo
119.04 237 li
119.04 267.12 li
118.8 267.12 li
cp
118.92 237.12 mo
119.04 237.12 li
119.04 267.12 li
118.92 267.12 li
cp
118.92 237.24 mo
119.16 237.24 li
119.16 267.12 li
118.92 267.12 li
cp
119.04 237.36 mo
119.16 237.36 li
119.16 267.12 li
119.04 267.12 li
cp
119.04 237.48 mo
119.28 237.48 li
119.28 267.12 li
119.04 267.12 li
cp
119.16 237.6 mo
119.4 237.6 li
119.4 267.12 li
119.16 267.12 li
cp
119.28 237.72 mo
119.4 237.72 li
119.4 267.12 li
119.28 267.12 li
cp
119.28 237.84 mo
119.52 237.84 li
119.52 267.12 li
119.28 267.12 li
cp
119.4 237.96 mo
119.52 237.96 li
119.52 267.12 li
119.4 267.12 li
cp
119.4 238.08 mo
119.64 238.08 li
119.64 267.12 li
119.4 267.12 li
cp
119.52 238.2 mo
119.76 238.2 li
119.76 267.12 li
119.52 267.12 li
cp
119.64 238.32 mo
119.76 238.32 li
119.76 267.12 li
119.64 267.12 li
cp
119.64 238.44 mo
119.88 238.44 li
119.88 267.12 li
119.64 267.12 li
cp
119.76 238.56 mo
119.88 238.56 li
119.88 267.12 li
119.76 267.12 li
cp
119.76 238.68 mo
120 238.68 li
120 267.12 li
119.76 267.12 li
cp
119.88 238.8 mo
120.12 238.8 li
120.12 267.12 li
119.88 267.12 li
cp
120 238.92 mo
120.12 238.92 li
120.12 267.12 li
120 267.12 li
cp
120 239.04 mo
120.24 239.04 li
120.24 267.12 li
120 267.12 li
cp
120.12 239.16 mo
120.36 239.16 li
120.36 267.12 li
120.12 267.12 li
cp
120.24 239.28 mo
120.36 239.28 li
120.36 267.12 li
120.24 267.12 li
cp
120.24 239.4 mo
120.48 239.4 li
120.48 267.12 li
120.24 267.12 li
cp
120.36 239.52 mo
120.6 239.52 li
120.6 267.12 li
120.36 267.12 li
cp
120.48 239.64 mo
120.6 239.64 li
120.6 267.12 li
120.48 267.12 li
cp
120.48 239.76 mo
120.72 239.76 li
120.72 267.12 li
120.48 267.12 li
cp
120.6 239.88 mo
120.84 239.88 li
120.84 267.12 li
120.6 267.12 li
cp
120.72 240 mo
120.84 240 li
120.84 267.12 li
120.72 267.12 li
cp
120.72 240.12 mo
120.96 240.12 li
120.96 267.12 li
120.72 267.12 li
cp
120.84 240.24 mo
121.08 240.24 li
121.08 267.12 li
120.84 267.12 li
cp
120.96 240.36 mo
121.08 240.36 li
121.08 267.12 li
120.96 267.12 li
cp
120.96 240.48 mo
121.2 240.48 li
121.2 267.12 li
120.96 267.12 li
cp
121.08 240.6 mo
121.32 240.6 li
121.32 267.12 li
121.08 267.12 li
cp
121.2 240.72 mo
121.44 240.72 li
121.44 267.12 li
121.2 267.12 li
cp
121.32 240.84 mo
121.44 240.84 li
121.44 267.12 li
121.32 267.12 li
cp
121.32 240.96 mo
121.56 240.96 li
121.56 267.12 li
121.32 267.12 li
cp
121.44 241.08 mo
121.68 241.08 li
121.68 267.12 li
121.44 267.12 li
cp
121.56 241.2 mo
121.8 241.2 li
121.8 267.12 li
121.56 267.12 li
cp
121.68 241.32 mo
121.8 241.32 li
121.8 267.12 li
121.68 267.12 li
cp
121.68 241.44 mo
121.92 241.44 li
121.92 267.12 li
121.68 267.12 li
cp
121.8 241.56 mo
122.04 241.56 li
122.04 267.12 li
121.8 267.12 li
cp
121.92 241.68 mo
122.16 241.68 li
122.16 267.12 li
121.92 267.12 li
cp
122.04 241.8 mo
122.16 241.8 li
122.16 267.12 li
122.04 267.12 li
cp
122.04 241.92 mo
122.28 241.92 li
122.28 267.12 li
122.04 267.12 li
cp
122.16 242.04 mo
122.4 242.04 li
122.4 267.12 li
122.16 267.12 li
cp
122.28 242.16 mo
122.52 242.16 li
122.52 267.12 li
122.28 267.12 li
cp
122.4 242.28 mo
122.52 242.28 li
122.52 267.12 li
122.4 267.12 li
cp
122.4 242.4 mo
122.64 242.4 li
122.64 267.12 li
122.4 267.12 li
cp
122.52 242.52 mo
122.76 242.52 li
122.76 267.12 li
122.52 267.12 li
cp
122.64 242.64 mo
122.88 242.64 li
122.88 267.12 li
122.64 267.12 li
cp
122.76 242.76 mo
123 242.76 li
123 267.12 li
122.76 267.12 li
cp
122.88 242.88 mo
123.12 242.88 li
123.12 267.12 li
122.88 267.12 li
cp
123 243 mo
123.24 243 li
123.24 267.12 li
123 267.12 li
cp
123.12 243.12 mo
123.36 243.12 li
123.36 267.12 li
123.12 267.12 li
cp
123.24 243.24 mo
123.48 243.24 li
123.48 267.12 li
123.24 267.12 li
cp
123.36 243.36 mo
123.48 243.36 li
123.48 267.12 li
123.36 267.12 li
cp
123.36 243.48 mo
123.6 243.48 li
123.6 267.12 li
123.36 267.12 li
cp
123.48 243.6 mo
123.72 243.6 li
123.72 267.12 li
123.48 267.12 li
cp
123.6 243.72 mo
123.72 243.72 li
123.72 267.12 li
123.6 267.12 li
cp
123.6 243.84 mo
123.84 243.84 li
123.84 267.12 li
123.6 267.12 li
cp
123.72 243.96 mo
123.96 243.96 li
123.96 267.12 li
123.72 267.12 li
cp
123.84 244.08 mo
124.08 244.08 li
124.08 267.12 li
123.84 267.12 li
cp
123.96 244.2 mo
124.2 244.2 li
124.2 267.12 li
123.96 267.12 li
cp
124.08 244.32 mo
124.32 244.32 li
124.32 267.12 li
124.08 267.12 li
cp
124.2 244.44 mo
124.44 244.44 li
124.44 267.12 li
124.2 267.12 li
cp
124.32 244.56 mo
124.56 244.56 li
124.56 267.12 li
124.32 267.12 li
cp
124.44 244.68 mo
124.68 244.68 li
124.68 267.12 li
124.44 267.12 li
cp
124.56 244.8 mo
124.8 244.8 li
124.8 267.12 li
124.56 267.12 li
cp
124.68 244.92 mo
124.8 244.92 li
124.8 267.12 li
124.68 267.12 li
cp
124.68 245.04 mo
124.92 245.04 li
124.92 267.12 li
124.68 267.12 li
cp
124.8 245.16 mo
125.04 245.16 li
125.04 267.12 li
124.8 267.12 li
cp
124.92 245.28 mo
125.16 245.28 li
125.16 267.12 li
124.92 267.12 li
cp
125.04 245.4 mo
125.28 245.4 li
125.28 267.12 li
125.04 267.12 li
cp
125.16 245.52 mo
125.4 245.52 li
125.4 267.12 li
125.16 267.12 li
cp
125.28 245.64 mo
125.52 245.64 li
125.52 267.12 li
125.28 267.12 li
cp
125.4 245.76 mo
125.64 245.76 li
125.64 267.12 li
125.4 267.12 li
cp
125.52 245.88 mo
125.76 245.88 li
125.76 267.12 li
125.52 267.12 li
cp
125.64 246 mo
125.88 246 li
125.88 267.12 li
125.64 267.12 li
cp
125.76 246.12 mo
126 246.12 li
126 267.12 li
125.76 267.12 li
cp
125.88 246.24 mo
126.12 246.24 li
126.12 267.12 li
125.88 267.12 li
cp
126 246.36 mo
126.24 246.36 li
126.24 267.12 li
126 267.12 li
cp
126.12 246.48 mo
126.36 246.48 li
126.36 267.12 li
126.12 267.12 li
cp
126.24 246.6 mo
126.48 246.6 li
126.48 267.12 li
126.24 267.12 li
cp
126.36 246.72 mo
126.6 246.72 li
126.6 267.12 li
126.36 267.12 li
cp
126.48 246.84 mo
126.72 246.84 li
126.72 267.12 li
126.48 267.12 li
cp
126.6 246.96 mo
126.84 246.96 li
126.84 267.12 li
126.6 267.12 li
cp
126.72 247.08 mo
126.96 247.08 li
126.96 267.12 li
126.72 267.12 li
cp
126.84 247.2 mo
127.08 247.2 li
127.08 267.12 li
126.84 267.12 li
cp
126.96 247.32 mo
127.2 247.32 li
127.2 267.12 li
126.96 267.12 li
cp
127.08 247.44 mo
127.32 247.44 li
127.32 267.12 li
127.08 267.12 li
cp
127.2 247.56 mo
127.44 247.56 li
127.44 267.12 li
127.2 267.12 li
cp
127.32 247.68 mo
127.56 247.68 li
127.56 267.12 li
127.32 267.12 li
cp
127.44 247.8 mo
127.68 247.8 li
127.68 267.12 li
127.44 267.12 li
cp
127.56 247.92 mo
127.8 247.92 li
127.8 267.12 li
127.56 267.12 li
cp
127.68 248.04 mo
128.04 248.04 li
128.04 267.12 li
127.68 267.12 li
cp
127.8 248.16 mo
128.16 248.16 li
128.16 267.12 li
127.8 267.12 li
cp
127.92 248.28 mo
128.28 248.28 li
128.28 267.12 li
127.92 267.12 li
cp
128.04 248.4 mo
128.4 248.4 li
128.4 267.12 li
128.04 267.12 li
cp
128.16 248.52 mo
128.52 248.52 li
128.52 267.12 li
128.16 267.12 li
cp
128.4 248.64 mo
128.64 248.64 li
128.64 267.12 li
128.4 267.12 li
cp
128.52 248.76 mo
128.76 248.76 li
128.76 267.12 li
128.52 267.12 li
cp
128.64 248.88 mo
128.88 248.88 li
128.88 267.12 li
128.64 267.12 li
cp
128.76 249 mo
129.12 249 li
129.12 267.12 li
128.76 267.12 li
cp
128.88 249.12 mo
129.24 249.12 li
129.24 267.12 li
128.88 267.12 li
cp
129 249.24 mo
129.36 249.24 li
129.36 267.12 li
129 267.12 li
cp
129.24 249.36 mo
129.48 249.36 li
129.48 267.12 li
129.24 267.12 li
cp
129.36 249.48 mo
129.6 249.48 li
129.6 267.12 li
129.36 267.12 li
cp
129.48 249.6 mo
129.84 249.6 li
129.84 267.12 li
129.48 267.12 li
cp
129.6 249.72 mo
129.96 249.72 li
129.96 267.12 li
129.6 267.12 li
cp
129.72 249.84 mo
130.08 249.84 li
130.08 267.12 li
129.72 267.12 li
cp
129.84 249.96 mo
130.2 249.96 li
130.2 267.12 li
129.84 267.12 li
cp
129.96 250.08 mo
130.32 250.08 li
130.32 267.12 li
129.96 267.12 li
cp
130.2 250.2 mo
130.44 250.2 li
130.44 267.12 li
130.2 267.12 li
cp
130.32 250.32 mo
130.68 250.32 li
130.68 267.12 li
130.32 267.12 li
cp
130.44 250.44 mo
130.8 250.44 li
130.8 267.12 li
130.44 267.12 li
cp
130.68 250.56 mo
130.92 250.56 li
130.92 267.12 li
130.68 267.12 li
cp
130.8 250.68 mo
131.16 250.68 li
131.16 267.12 li
130.8 267.12 li
cp
130.92 250.8 mo
131.28 250.8 li
131.28 267.12 li
130.92 267.12 li
cp
131.16 250.92 mo
131.52 250.92 li
131.52 267.12 li
131.16 267.12 li
cp
131.28 251.04 mo
131.64 251.04 li
131.64 267.12 li
131.28 267.12 li
cp
131.4 251.16 mo
131.76 251.16 li
131.76 267.12 li
131.4 267.12 li
cp
131.64 251.28 mo
131.88 251.28 li
131.88 267.12 li
131.64 267.12 li
cp
131.76 251.4 mo
132.12 251.4 li
132.12 267.12 li
131.76 267.12 li
cp
132 251.52 mo
132.36 251.52 li
132.36 267.12 li
132 267.12 li
cp
132.12 251.64 mo
132.48 251.64 li
132.48 267.12 li
132.12 267.12 li
cp
132.36 251.76 mo
132.72 251.76 li
132.72 267.12 li
132.36 267.12 li
cp
132.48 251.88 mo
132.84 251.88 li
132.84 267.12 li
132.48 267.12 li
cp
132.6 252 mo
132.96 252 li
132.96 267.12 li
132.6 267.12 li
cp
132.84 252.12 mo
133.2 252.12 li
133.2 267.12 li
132.84 267.12 li
cp
132.96 252.24 mo
133.44 252.24 li
133.44 267.12 li
132.96 267.12 li
cp
133.2 252.36 mo
133.56 252.36 li
133.56 267.12 li
133.2 267.12 li
cp
133.44 252.48 mo
133.8 252.48 li
133.8 267.12 li
133.44 267.12 li
cp
133.56 252.6 mo
134.04 252.6 li
134.04 267.12 li
133.56 267.12 li
cp
133.8 252.72 mo
134.16 252.72 li
134.16 267.12 li
133.8 267.12 li
cp
134.04 252.84 mo
134.4 252.84 li
134.4 267.12 li
134.04 267.12 li
cp
134.16 252.96 mo
134.64 252.96 li
134.64 267.12 li
134.16 267.12 li
cp
134.4 253.08 mo
134.88 253.08 li
134.88 267.12 li
134.4 267.12 li
cp
134.64 253.2 mo
135 253.2 li
135 267.12 li
134.64 267.12 li
cp
134.88 253.32 mo
135.24 253.32 li
135.24 267.12 li
134.88 267.12 li
cp
135 253.44 mo
135.48 253.44 li
135.48 267.12 li
135 267.12 li
cp
135.24 253.56 mo
135.72 253.56 li
135.72 267.12 li
135.24 267.12 li
cp
135.48 253.68 mo
135.84 253.68 li
135.84 267.12 li
135.48 267.12 li
cp
135.72 253.8 mo
136.08 253.8 li
136.08 267.12 li
135.72 267.12 li
cp
135.84 253.92 mo
136.32 253.92 li
136.32 267.12 li
135.84 267.12 li
cp
136.08 254.04 mo
136.44 254.04 li
136.44 267.12 li
136.08 267.12 li
cp
136.32 254.16 mo
136.68 254.16 li
136.68 267.12 li
136.32 267.12 li
cp
136.44 254.28 mo
136.92 254.28 li
136.92 267.12 li
136.44 267.12 li
cp
136.68 254.4 mo
137.04 254.4 li
137.04 267.12 li
136.68 267.12 li
cp
136.92 254.52 mo
137.28 254.52 li
137.28 267.12 li
136.92 267.12 li
cp
137.04 254.64 mo
137.52 254.64 li
137.52 267.12 li
137.04 267.12 li
cp
137.4 254.76 mo
137.76 254.76 li
137.76 267.12 li
137.4 267.12 li
cp
137.64 254.88 mo
138 254.88 li
138 267.12 li
137.64 267.12 li
cp
137.88 255 mo
138.24 255 li
138.24 267.12 li
137.88 267.12 li
cp
138.12 255.12 mo
138.48 255.12 li
138.48 267.12 li
138.12 267.12 li
cp
138.36 255.24 mo
138.72 255.24 li
138.72 267.12 li
138.36 267.12 li
cp
138.6 255.36 mo
138.96 255.36 li
138.96 267.12 li
138.6 267.12 li
cp
138.84 255.48 mo
139.2 255.48 li
139.2 267.12 li
138.84 267.12 li
cp
139.08 255.6 mo
139.56 255.6 li
139.56 267.12 li
139.08 267.12 li
cp
139.44 255.72 mo
139.8 255.72 li
139.8 267.12 li
139.44 267.12 li
cp
139.68 255.84 mo
140.16 255.84 li
140.16 267.12 li
139.68 267.12 li
cp
139.92 255.96 mo
140.4 255.96 li
140.4 267.12 li
139.92 267.12 li
cp
140.16 256.08 mo
140.64 256.08 li
140.64 267.12 li
140.16 267.12 li
cp
140.52 256.2 mo
141 256.2 li
141 267.12 li
140.52 267.12 li
cp
140.76 256.32 mo
141.24 256.32 li
141.24 267.12 li
140.76 267.12 li
cp
141.12 256.44 mo
141.6 256.44 li
141.6 267.12 li
141.12 267.12 li
cp
141.36 256.56 mo
141.84 256.56 li
141.84 267.12 li
141.36 267.12 li
cp
141.72 256.68 mo
142.2 256.68 li
142.2 267.12 li
141.72 267.12 li
cp
141.96 256.8 mo
142.44 256.8 li
142.44 267.12 li
141.96 267.12 li
cp
142.32 256.92 mo
142.8 256.92 li
142.8 267.12 li
142.32 267.12 li
cp
142.56 257.04 mo
143.04 257.04 li
143.04 267.12 li
142.56 267.12 li
cp
142.92 257.16 mo
143.4 257.16 li
143.4 267.12 li
142.92 267.12 li
cp
143.16 257.28 mo
143.76 257.28 li
143.76 267.12 li
143.16 267.12 li
cp
143.52 257.4 mo
144.12 257.4 li
144.12 267.12 li
143.52 267.12 li
cp
143.88 257.52 mo
144.36 257.52 li
144.36 267.12 li
143.88 267.12 li
cp
144.24 257.64 mo
144.72 257.64 li
144.72 267.12 li
144.24 267.12 li
cp
144.6 257.76 mo
145.08 257.76 li
145.08 267.12 li
144.6 267.12 li
cp
144.84 257.88 mo
145.44 257.88 li
145.44 267.12 li
144.84 267.12 li
cp
145.2 258 mo
145.8 258 li
145.8 267.12 li
145.2 267.12 li
cp
145.68 258.12 mo
146.16 258.12 li
146.16 267.12 li
145.68 267.12 li
cp
146.04 258.24 mo
146.52 258.24 li
146.52 267.12 li
146.04 267.12 li
cp
146.4 258.36 mo
147 258.36 li
147 267.12 li
146.4 267.12 li
cp
146.76 258.48 mo
147.36 258.48 li
147.36 267.12 li
146.76 267.12 li
cp
147.12 258.6 mo
147.72 258.6 li
147.72 267.12 li
147.12 267.12 li
cp
147.6 258.72 mo
148.2 258.72 li
148.2 267.12 li
147.6 267.12 li
cp
147.96 258.84 mo
148.56 258.84 li
148.56 267.12 li
147.96 267.12 li
cp
148.32 258.96 mo
148.92 258.96 li
148.92 267.12 li
148.32 267.12 li
cp
148.8 259.08 mo
149.4 259.08 li
149.4 267.12 li
148.8 267.12 li
cp
149.16 259.2 mo
149.76 259.2 li
149.76 267.12 li
149.16 267.12 li
cp
149.64 259.32 mo
150.24 259.32 li
150.24 267.12 li
149.64 267.12 li
cp
150 259.44 mo
150.72 259.44 li
150.72 267.12 li
150 267.12 li
cp
150.48 259.56 mo
151.08 259.56 li
151.08 267.12 li
150.48 267.12 li
cp
150.96 259.68 mo
151.56 259.68 li
151.56 267.12 li
150.96 267.12 li
cp
151.44 259.8 mo
152.16 259.8 li
152.16 267.12 li
151.44 267.12 li
cp
151.92 259.92 mo
152.64 259.92 li
152.64 267.12 li
151.92 267.12 li
cp
152.4 260.04 mo
153.12 260.04 li
153.12 267.12 li
152.4 267.12 li
cp
152.88 260.16 mo
153.6 260.16 li
153.6 267.12 li
152.88 267.12 li
cp
153.48 260.28 mo
154.08 260.28 li
154.08 267.12 li
153.48 267.12 li
cp
153.96 260.4 mo
154.68 260.4 li
154.68 267.12 li
153.96 267.12 li
cp
154.44 260.52 mo
155.16 260.52 li
155.16 267.12 li
154.44 267.12 li
cp
155.04 260.64 mo
155.76 260.64 li
155.76 267.12 li
155.04 267.12 li
cp
155.52 260.76 mo
156.24 260.76 li
156.24 267.12 li
155.52 267.12 li
cp
156.12 260.88 mo
156.84 260.88 li
156.84 267.12 li
156.12 267.12 li
cp
156.72 261 mo
157.44 261 li
157.44 267.12 li
156.72 267.12 li
cp
157.2 261.12 mo
158.04 261.12 li
158.04 267.12 li
157.2 267.12 li
cp
157.92 261.24 mo
158.76 261.24 li
158.76 267.12 li
157.92 267.12 li
cp
158.52 261.36 mo
159.36 261.36 li
159.36 267.12 li
158.52 267.12 li
cp
159.24 261.48 mo
160.08 261.48 li
160.08 267.12 li
159.24 267.12 li
cp
159.84 261.6 mo
160.8 261.6 li
160.8 267.12 li
159.84 267.12 li
cp
160.68 261.72 mo
161.52 261.72 li
161.52 267.12 li
160.68 267.12 li
cp
161.4 261.84 mo
162.36 261.84 li
162.36 267.12 li
161.4 267.12 li
cp
162.12 261.96 mo
163.08 261.96 li
163.08 267.12 li
162.12 267.12 li
cp
162.84 262.08 mo
163.8 262.08 li
163.8 267.12 li
162.84 267.12 li
cp
163.68 262.2 mo
164.64 262.2 li
164.64 267.12 li
163.68 267.12 li
cp
164.52 262.32 mo
165.48 262.32 li
165.48 267.12 li
164.52 267.12 li
cp
165.36 262.44 mo
166.44 262.44 li
166.44 267.12 li
165.36 267.12 li
cp
166.32 262.56 mo
167.4 262.56 li
167.4 267.12 li
166.32 267.12 li
cp
167.16 262.68 mo
168.36 262.68 li
168.36 267.12 li
167.16 267.12 li
cp
168.24 262.8 mo
169.44 262.8 li
169.44 267.12 li
168.24 267.12 li
cp
169.2 262.92 mo
170.4 262.92 li
170.4 267.12 li
169.2 267.12 li
cp
170.28 263.04 mo
171.48 263.04 li
171.48 267.12 li
170.28 267.12 li
cp
171.24 263.16 mo
172.56 263.16 li
172.56 267.12 li
171.24 267.12 li
cp
172.32 263.28 mo
173.64 263.28 li
173.64 267.12 li
172.32 267.12 li
cp
173.4 263.4 mo
174.72 263.4 li
174.72 267.12 li
173.4 267.12 li
cp
174.6 263.52 mo
175.92 263.52 li
175.92 267.12 li
174.6 267.12 li
cp
175.8 263.64 mo
177.24 263.64 li
177.24 267.12 li
175.8 267.12 li
cp
177.12 263.76 mo
178.56 263.76 li
178.56 267.12 li
177.12 267.12 li
cp
178.44 263.88 mo
179.88 263.88 li
179.88 267.12 li
178.44 267.12 li
cp
179.76 264 mo
181.44 264 li
181.44 267.12 li
179.76 267.12 li
cp
181.32 264.12 mo
183 264.12 li
183 267.12 li
181.32 267.12 li
cp
182.76 264.24 mo
184.68 264.24 li
184.68 267.12 li
182.76 267.12 li
cp
184.56 264.36 mo
186.48 264.36 li
186.48 267.12 li
184.56 267.12 li
cp
186.24 264.48 mo
188.28 264.48 li
188.28 267.12 li
186.24 267.12 li
cp
188.16 264.6 mo
190.32 264.6 li
190.32 267.12 li
188.16 267.12 li
cp
190.2 264.72 mo
192.48 264.72 li
192.48 267.12 li
190.2 267.12 li
cp
192.24 264.84 mo
194.76 264.84 li
194.76 267.12 li
192.24 267.12 li
cp
194.64 264.96 mo
197.28 264.96 li
197.28 267.12 li
194.64 267.12 li
cp
197.04 265.08 mo
200.04 265.08 li
200.04 267.12 li
197.04 267.12 li
cp
199.8 265.2 mo
202.92 265.2 li
202.92 267.12 li
199.8 267.12 li
cp
202.68 265.32 mo
206.28 265.32 li
206.28 267.12 li
202.68 267.12 li
cp
206.04 265.44 mo
209.76 265.44 li
209.76 267.12 li
206.04 267.12 li
cp
209.52 265.56 mo
213.6 265.56 li
213.6 267.12 li
209.52 267.12 li
cp
213.36 265.68 mo
218.04 265.68 li
218.04 267.12 li
213.36 267.12 li
cp
217.8 265.8 mo
222.96 265.8 li
222.96 267.12 li
217.8 267.12 li
cp
222.84 265.92 mo
228.36 265.92 li
228.36 267.12 li
222.84 267.12 li
cp
228.24 266.04 mo
234.72 266.04 li
234.72 267.12 li
228.24 267.12 li
cp
234.48 266.16 mo
242.16 266.16 li
242.16 267.12 li
234.48 267.12 li
cp
241.92 266.28 mo
251.16 266.28 li
251.16 267.12 li
241.92 267.12 li
cp
250.92 266.4 mo
262.08 266.4 li
262.08 267.12 li
250.92 267.12 li
cp
261.96 266.52 mo
276.36 266.52 li
276.36 267.12 li
261.96 267.12 li
cp
276.24 266.64 mo
296.52 266.64 li
296.52 267.12 li
276.24 267.12 li
cp
296.4 266.76 mo
323.16 266.76 li
323.16 267.12 li
296.4 267.12 li
cp
323.04 266.88 mo
391.8 266.88 li
391.8 267.12 li
323.04 267.12 li
cp
391.56 267 mo
477.72 267 li
477.72 267.12 li
391.56 267.12 li
cp
.719692 .439979 .027985 0 cmyk
f
grestore
95.64 267.24 mo
94.2 267.24 li
94.2 62.76 li
95.64 62.76 li
cp
94.2 267.24 mo
cp
90.48 64.2 mo
94.92 55.32 li
99.36 64.2 li
.977661 .78024 .250095 .0965591 cmyk
f
94.92 266.4 mo
470.28 266.4 li
470.28 267.96 li
94.92 267.96 li
cp
468.72 262.8 mo
477.6 267.24 li
468.72 271.68 li
f
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.652 sep
%ADOBeginSubsetFont: DBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /DBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79669d86b6740000b09800001ba268656164ef1102a200000f640000
0036686865610dad126500000f9c00000024686d747852c1b9fb00000fc0
00003c946c6f63610161565200004c5400003c9c6d617870214703970000
88f0000000206e616d65e676aace0000891000000377707265706baf02fe
00008c8800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005dc2912a435e85f0f3cf500190800
00000000bbeb7ccc00000000ce0d5eedfbfafd8b09ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
023200940267002102e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329009003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<000000000000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae0000040c0000040c0000040c0000
040c0000040c0000040c0000040c0000040c0000040c0000040c0000040c
0000040c0000040c0000040c0000040c0000040c0000040c0000040c0000
040c0000040c0000040c0000040c0000040c0000040c0000040c0000040c
0000040c0000040c0000054e0000054e0000054e0000054e0000054e0000
054e0000054e0000054e0000054e0000054e0000054e0000054e0000054e
0000054e0000054e0000054e0000054e0000054e0000054e0000054e0000
054e0000054e0000054e0000054e0000054e0000054e0000054e0000054e
0000054e0000054e0000054e0000054e0000054e0000054e0000054e0000
054e0000054e0000054e0000054e0000054e0000054e0000054e0000054e
0000054e0000054e0000054e0000054e0000054e0000054e0000054e0000
072800000728000007280000072800000728000007280000072800000728
00000728000007280000072800000728000007280000081a0000081a0000
081a0000081a0000081a0000081a0000081a0000081a0000081a0000081a
0000081a0000081a0000081a0000081a0000081a0000081a0000081a0000
081a0000081a0000081a0000081a0000081a0000081a0000081a0000081a
0000081a0000081a0000081a0000081a0000081a0000081a0000081a0000
093600000936000009360000093600000936000009360000093600000936
0000093600000936000009360000093600000a6400000a6400000a640000
0b5600000b5600000b5600000b5600000ce200000ce200000ce200000ce2
00000ce200000ce200000ce200000ce200000ce200000ce200000dda0000
0dda00000dda00000dda00000dda00000dda00000dda00000dda00000dda
00000dda00000dda00000dda00000dda00000dda00000dda00000dda0000
0dda00000dda00000dda00000dda00000dda00000dda00000dda00000dda
00000dda00000dda00000dda00000efa00000efa00000efa00000efa0000
0efa00000efa00000efa00000efa00000efa00000efa00000efa00000efa
00000efa00000efa00000efa00000efa00000efa00000efa00000efa0000
0efa00000efa00000efa00000efa00000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001164000011640000116400001164
000011640000116400001164000011640000116400001164000011640000
116400001164000011640000116400001164000011640000116400001164
000011640000116400001164000011640000116400001164000011640000
116400001164000011640000116400001164000011640000116400001164
000012ca000014380000157800001760000018ea00001a5400001a640000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba2000100000f260120001000c3000700020010002f00650000
11900182000400010000000e00ae00000003000000000064000000000003
00000007007600640001000000000000003200da0001000000000003000e
010c0001000000000004000e011a0001000000000006000e012800010000
00000007003b01360003000104090000006401710003000104090001001c
01d50003000104090002000e01f10003000104090003001c01ff00030001
04090004001c021b0003000104090006001c023700030001040900070076
025300a9002000320030003100330020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303133204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
43434e4a4c502b43616c6962726943434e4a4c502b43616c696272694343
4e4a4c502b43616c6962726943616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e00a9002000320030003100330020004d006900
630072006f0073006f0066007400200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e00430043004e004a00
4c0050002b00430061006c00690062007200690052006500670075006c00
61007200430043004e004a004c0050002b00430061006c00690062007200
6900430043004e004a004c0050002b00430061006c006900620072006900
430043004e004a004c0050002b00430061006c0069006200720069004300
61006c006900620072006900200069007300200061002000740072006100
640065006d00610072006b0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000670072006f00750070002000
6f006600200063006f006d00700061006e006900650073002e00b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[7075 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 4024 876 <00010001fee7030a05be00150008b11005002f2f3130170e0323222e0237
013e0333321e0207a8040d141d151921120406025d040d131e1519201204
05f10d0f0804070d130d067b0d0f0903070c140d>DBAAAA+Calibri AddT42Char 
2 4452 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>DBAAAA+Calibri AddT42Char 
2 4810 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>DBAAAA+Calibri AddT42Char 
2 5176 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>DBAAAA+Calibri AddT42Char 
2 5496 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>DBAAAA+Calibri AddT42Char 
2 5984 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>DBAAAA+Calibri AddT42Char 
2 6378 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>DBAAAA+Calibri AddT42Char 
2 4104 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>DBAAAA+Calibri AddT42Char 
2 6740 1010 <ffff006bffed03bd0520020603ca0000>DBAAAA+Calibri AddT42Char 
2 6756 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>DBAAAA+Calibri AddT42Char 
2 322 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>DBAAAA+Calibri AddT42Char 
2 686 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>DBAAAA+Calibri AddT42Char 
2 1036 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>DBAAAA+Calibri AddT42Char 
2 1358 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>DBAAAA+Calibri AddT42Char 
2 1832 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>DBAAAA+Calibri AddT42Char 
2 2074 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>DBAAAA+Calibri AddT42Char 
2 2358 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>DBAAAA+Calibri AddT42Char 
2 2660 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>DBAAAA+Calibri AddT42Char 
2 2902 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>DBAAAA+Calibri AddT42Char 
2 3298 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>DBAAAA+Calibri AddT42Char 
2 3546 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>DBAAAA+Calibri AddT42Char 
2 3834 460 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b00>DBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>DBAAAA+Calibri AddT42Char 
DBAAAA+Calibri /CharStrings get begin
/slash 876 def
/zero 1004 def
/one 1005 def
/two 1006 def
/three 1007 def
/four 1008 def
/five 1009 def
/six 1010 def
/seven 1011 def
/B 17 def
/a 258 def
/e 286 def
/g 336 def
/i 349 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
/t 410 def
/u 437 def
/z 460 def
end
DBAAAA+Calibri /Encoding get
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 66 /B put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 122 /z put
pop
end
%ADOEndSubsetFont
/CQVUGZ+Calibri /DBAAAA+Calibri findfont ct_VMDictPut
/CQVUGZ+Calibri*1 
[47{/.notdef}rp /slash /zero /one /two /three /four /five 
/six /seven 10{/.notdef}rp /B 30{/.notdef}rp /a 3{/.notdef}rp /e 
/.notdef /g /.notdef /i 5{/.notdef}rp /o /p /.notdef 
/r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]
CQVUGZ+Calibri nf
CQVUGZ+Calibri*1 [13.2661 0 0 -13.2661 0 0 ]msf
75.72 271.08 mo
(0)sh
48.7235 240.833 mo
(10000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
48.7235 210.586 mo
(20000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
48.7235 180.34 mo
(30000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
48.7235 149.974 mo
(40000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
48.7235 119.727 mo
(50000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
48.7235 89.4801 mo
(60000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
48.7235 59.2334 mo
(70000)
[6.72198 6.8427 6.72198 6.72198 0 ]xsh
CQVUGZ+Calibri*1 [0 -20.7398 -20.7398 0 0 0 ]msf
38.88 186.48 mo
(size/B)
[-8.08658 -4.72668 -7.80032 -10.3285 -7.98276 0 ]ysh
CQVUGZ+Calibri*1 [20.7398 0 0 -20.7398 0 0 ]msf
257.52 293.52 mo
(groups)
[9.72684 6.96854 11.0334 10.7908 10.6726 0 ]xsh
%ADOBeginSubsetFont: BAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /BAAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966c9beda620000ba740006a97c68656164ef1102a200000f640000
0036686865610dad126500000f9c00000024686d747852c1b9fb00000fc0
00003c946c6f63613440f3bc00004c5400003c9c6d617870214703970000
88f0000000206e616d652bb526980000891000000d53707265706baf02fe
0000966400002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005dc291890ff285f0f3cf500190800
00000000bbeb7ccc00000000ce0d5eedfbfafd8b09ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
023200940267002102e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329009003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<00000000000001420000014200000142000001420000025e000002740000
028c000002a4000002bc000002d4000002ec000003040000031c00000334
0000045a000005a4000005bc00000728000008220000083a000008520000
086a00000882000009ba00000a9400000aac00000abc00000baa00000ca2
00000cb800000cd000000ce600000cfc00000d1200000d2800000d400000
0d5800000e8a00000f5c000010aa000010c2000010da000010f20000110a
0000124a0000126200001380000014160000142e000014440000145c0000
14740000148c000014a4000014bc000014d2000015860000159e00001668
0000167e0000177c00001794000018300000184800001860000018780000
194a0000196200001abc00001bf200001c0a00001c2200001c3a00001c52
00001d6200001e5200001e6a00001e8200001e9a00001eb200001eca0000
1ee200001efa00001f1200002018000020300000216c0000225e0000232c
00002462000025b8000025d0000025e6000025fe000027a2000027ba0000
27d0000027e60000295a0000297200002a4000002a5600002a6e00002b5c
00002c7200002c8a00002ca200002cba00002cd200002cea00002d020000
2d1a00002d3200002d4a00002e6a00002f4e0000307000003088000030a0
000030b8000030d0000031a00000328000003296000032ae000032c40000
32da000033720000338a000033a0000033b8000034840000349a000034b2
000034c8000034de000034f40000350a0000352000003538000035500000
36700000379e000037b600003896000039620000397a00003990000039a8
000039c000003af600003b7a00003b9000003ba000003c7c00003d2e0000
3d4400003d5c00003d7200003d8800003d9e00003db400003dca00003de2
00003f0400003f9e0000408c000040a4000040bc000040d4000040ec0000
41a8000041c0000042da000043320000434a000043600000437800004390
000043a8000043c0000043d8000043ee000044a6000044be0000454c0000
45620000464a00004662000046cc000046e4000046fc00004714000047da
000047f2000048de000049b6000049ce000049e6000049fc00004a140000
4b0200004b9e00004bb600004bce00004be600004bfe00004c1600004c2e
00004c4600004c5e00004daa00004dc200004ef200004fa0000050680000
51460000523a0000525200005268000052800000538c000053a4000053ba
000053d0000055060000551c0000559e000055b4000055cc000056a00000
57400000575800005770000057880000579e000057b6000057ce000057e6
000057fe0000581600005936000059da00005ae600005afe00005b160000
5b2e00005b4600005c4400005ce800005cfe00005d1600005d2c00005d42
00005df400005e0c00005e2200005e3a00005f9800005fae00005fc60000
5fdc00005ff2000060080000601e000060340000604c00006064000061ca
000063840000639c000064ce000065e6000065fe000066140000662a0000
6642000067740000691c00006ae200006ca000006ebc00006fea00007002
00007138000072c60000740800007420000074380000744e000074640000
747a00007490000074a6000074be0000761200007718000078be00007af2
00007c4200007dbc00007fc2000080e8000081ee00008206000083620000
84c60000862e0000875a000088a400008a3200008b1000008cc200008e78
00008e900000907e0000926400009454000095fe000097da000099da0000
9b4200009ca600009e4a0000a0300000a1cc0000a3e80000a4f80000a510
0000a5280000a5400000a6d60000a8320000a84a0000a8620000aa500000
ac2a0000ac400000ac560000ac6e0000ac860000ada60000adbe0000add6
0000adee0000ae060000af0e0000b05a0000b16c0000b25e0000b2760000
b28c0000b2a40000b2bc0000b2d40000b2ec0000b3040000b3e80000b440
0000b4580000b5b80000b6c60000b7500000b7680000b89c0000b8b40000
b99a0000ba200000ba360000ba4e0000ba640000bb2a0000bb420000bd04
0000be260000be3e0000be560000be6c0000be840000be9c0000bf900000
c0ac0000c0c40000c0dc0000c0f40000c10a0000c1220000c13a0000c152
0000c16a0000c2a60000c2be0000c40e0000c53c0000c6280000c75a0000
c84c0000c8640000c87a0000c8900000ca1c0000ca340000ca4a0000ca60
0000cbca0000cbe00000cdde0000d03c0000d1820000d2100000d3080000
d3200000d3360000d45c0000d5b60000d5ce0000d5e60000d5fe0000d616
0000d62e0000d6460000d65e0000d6760000d8080000d8f40000da580000
dc420000dc5a0000dc720000dc8a0000dca20000dcba0000dcd20000dcea
0000dd020000df220000e0a00000e1c00000e1d80000e1f00000e2080000
e21e0000e2360000e24e0000e2660000e27e0000e2960000e3b40000e522
0000e6d20000e6ea0000e7020000e71a0000e7320000e8520000e91c0000
e9320000e94a0000e9600000e9760000ea340000ea4c0000ea620000ea7a
0000eb880000ec3c0000ed300000ee1c0000eeee0000ef9a0000f0660000
f12e0000f1f00000f3760000f4300000f4b80000f5640000f6380000f690
0000f7900000f83c0000f8ce0000f9a40000fa760000fb1c0000fc0c0000
fcc00000fd720000fe220000ff4200010026000100d40001017a000101e8
0001025c000102ca000102dc000102ee00010358000103c40001042e0001
044000010452000104fc000105aa00010656000106680001067a00010722
000107ca00010874000108860001089800010920000109ce00010a780001
0b2800010b3a00010b4c00010bc400010c3c00010cb400010d2800010d3a
00010d4c00010daa00010e0800010e6600010e7800010e8a00010f1e0001
0fb2000110300001104200011054000110de0001116e000111f80001120a
0001121c000113260001141c0001152e000115cc000116920001174c0001
175e00011770000117b8000118000001184800011890000118a2000118b4
0001192a0001193c000119c0000119d200011a3600011aa600011ab60001
1acc00011adc00011b4c00011bf400011c0400011c1c00011c2c00011c3c
00011c5400011d3a00011d4a00011d6200011d7a00011d8a00011e320001
1e4200011e5200011f1c00011f2c00011f4400011fc800011fd8000120be
000120ce000120de000120f60001210c0001222000012230000123280001
24420001245a0001246a0001248e0001249e0001250a000125a8000125b8
000125dc000125ec000125fc000126200001270400012714000127360001
274e0001275e000128060001281600012826000128ee000128fe00012922
000129a6000129b600012a9800012aa800012ab800012adc00012af20001
2c0000012c1000012d0800012e2000012e4400012f7c00012f94000130c4
000131c400013298000133ca000135140001352c00013620000136de0001
36f6000137b0000138f80001398200013998000139b0000139c8000139d8
00013aec00013bfa00013cb800013dfa00013f4800013f5800013f700001
40740001414400014206000142f6000143bc0001449c000144b4000144ca
000144e0000145e6000146f00001484e0001497c00014ab000014ac80001
4b3000014b4200014c0800014c1a00014c2c00014c3e00014c5000014c60
00014cce00014d3c00014d4c00014e1000014e2000014e8a00014ea20001
4f240001502000015030000150460001505c000152300001537000015462
0001547a00015492000154a2000154ba000154ca000155dc000155f40001
56a6000157b6000157c6000157d6000158e6000158f6000159b200015a36
00015a4600015a5600015a6600015a7600015b6000015b7600015c360001
5d4e00015d5e00015e1400015eca00015f860001603800016122000161e0
000162d40001638000016494000165960001669a000167920001689a0001
697e00016a8800016a9800016b5400016b6400016bce00016be600016c68
00016d6400016d7400016d8a00016da000016f5e0001708e0001716a0001
71820001719a000171aa000171c2000171d2000172e6000172fe000173b4
000173c4000173d4000173e4000174980001751c0001752c0001753c0001
754c0001755c000176460001765c0001771e0001783000017840000178f6
000179ac00017a5a00017afe00017bd600017c8a00017d7400017e160001
7f1e000180240001811c00018202000182fa000183d4000184d4000185d2
000186da000186ea000187ee000188f400018a0400018a7400018a8c0001
8b0e00018b2600018c1000018c2000018c3000018c4800018c5e00018e22
00018f64000190380001904e00019066000190760001908e0001909e0001
91b0000191c80001927200019384000194d20001958e000196ac000196bc
0001977e000198020001981a0001982a0001983a0001984a000198d20001
98e2000198f200019908000199da00019ad200019ae200019b8a00019c40
00019cf800019daa00019e8c00019f560001a0560001a1100001a2260001
a33e0001a43a0001a5340001a6660001a6760001a7800001a81e0001a8bc
0001a95a0001a96c0001a97e0001aa080001aa1c0001aa300001ab420001
ab560001ab6a0001acb80001ad540001ad680001ae820001ae960001aef8
0001afa40001b0340001b0780001b10e0001b16e0001b1d00001b1e00001
b1f00001b29e0001b34e0001b35e0001b36e0001b3d00001b4800001b4e4
0001b54a0001b55c0001b56e0001b6220001b6d80001b6ea0001b6fc0001
b74c0001b79c0001b7ec0001b87e0001b8d20001b9260001b96c0001b97e
0001b9c80001b9d80001ba1c0001ba2c0001ba3c0001ba4c0001ba8e0001
badc0001bb1a0001bb2a0001bbbc0001bc5c0001bcca0001bd340001be28
0001bf200001bfb00001c0440001c0b20001c1200001c1300001c1400001
c1500001c1600001c1700001c1800001c2380001c3020001c42c0001c5ca
0001c6580001c6e20001c7600001c81e0001c8700001c8fc0001ca7e0001
cc320001ce660001d02a0001d1bc0001d1cc0001d2fe0001d4540001d572
0001d6a60001d8420001d8dc0001da060001db780001dd020001de2a0001
de580001dffc0001e1160001e2320001e2600001e3500001e4a40001e5de
0001e7440001e89e0001ea3c0001eb4a0001ec6c0001edf80001ef6e0001
f0b20001f2200001f3a20001f43e0001f4c40001f5b20001f6f00001f7b4
0001f89a0001f9920001fa220001fb300001fc1c0001fcb80001fd700001
fe4c0001ff840002004800020136000202920002031e0002056a00020664
00020700000207860002086a0002099e00020a6800020b5a00020c500002
0cda00020dfc00020ef400020f8e00021040000210500002106000021126
0002121a0002130800021398000214a20002158a0002162a000216ae0002
179e000218d8000219a200021a9800021aa800021b3800021b4800021c22
00021d8800021ef6000220360002221e000223a800022512000225220002
266000022670000227e2000227f400022806000228180002282a0002283c
0002284e00022860000228720002288400022896000228a8000228ba0002
28cc000228de000228f00002298600022a0c00022ad000022bea00022cac
00022d8800022e7800022f0600023012000231020002317a000231ba0002
322a000232b800023348000233de00023462000235300002366000023724
000237fe000238e60002397200023a8200023b6800023b7a00023b8c0002
3b9e00023bb000023bc200023bd400023be600023bf800023c0a00023c1c
00023c9000023caa00023ccc00023cee00023d1000023d3200023d540002
3d7600023fb40002419c000241be000241e0000242020002422400024246
000242680002428a000242ac000242d60002444c0002464a000246e80002
472c000247ec000248c80002493e00024a4400024b7000024be400024c60
00024d4e00024e1c00024ee600024f5200024ff20002511e0002524c0002
533a000253e400025492000254a2000254b2000254c2000255760002564c
00025708000257d4000258aa0002596800025a2600025ae800025ba80002
5c6200025d1800025e5800025f8c0002613c00026202000262cc000263a2
000264980002657200026664000267ae0002691c00026a2e00026b580002
6c0600026ce200026d9400026e7200026f9a00027104000271f400027320
00027360000273760002738e000273a4000273ba000273d0000273e60002
74040002741a00027430000274460002745c0002747a00027490000274a8
000274be000274d4000274ea000275000002751600027532000275480002
7560000275760002758e000275a4000275ba000275d0000275e600027604
000277440002775c000277740002778c000277a4000277ba000277d00002
77e80002792a000279420002795a000279720002798a000279a0000279b6
000279cc000279e4000279fa00027a1200027a2800027a3e00027a540002
7a6a00027a8600027a9c00027ab200027ac800027ade00027afa00027b10
00027b2800027b3e00027b5400027b6a00027b8000027b9600027bb20002
7bc800027be000027bf600027c0e00027c2400027c3a00027c5000027c66
00027c8400027dea00027e0200027e1a00027e3200027e4800027e5e0002
7e7400027e8c00027fda00027ff20002800a00028022000280380002804e
000280660002807c00028094000281d4000282740002828a000282a20002
82b8000282ce000282e4000282fa000283160002832c0002834200028358
0002836e0002838a000283a0000283b8000283ce000283e4000283fa0002
841000028426000284420002845800028470000284860002849e000284b4
000284ca000284e0000284f600028514000285fc000286140002862c0002
86440002865c0002867200028688000286a00002878e000287a6000287be
000287d6000287ec00028802000288180002882e000288460002890c0002
89e600028ac400028c1600028d2e00028de000028e9600028fc4000290ba
000292de000293c0000294a0000295840002966a0002974e0002983c0002
98540002986a000298800002992c000299440002995c000299740002998c
000299a4000299bc000299cc000299dc00029aa200029ab200029ac20002
9b4200029b5200029b6200029b7200029b8200029b9200029ba200029bb2
00029bc200029bd200029be200029cac00029cbc00029dba00029dca0002
9dda00029e6000029e7000029f3600029fce0002a0640002a0a60002a0b8
0002a1140002a1260002a1c20002a1d40002a2760002a3380002a3fa0002
a47a0002a50e0002a5200002a5300002a5420002a5c00002a5d20002a64e
0002a6600002a6720002a6840002a6bc0002a6f20002a7220002a7340002
a7460002a77e0002a7b60002a7fc0002a8240002a89a0002a9100002a922
0002a9a40002a9fe0002aa420002aaec0002aafe0002ab100002ab220002
ab340002ab460002ab580002ab680002ab7e0002ab900002aba00002abb2
0002abc40002abd60002abe80002abfa0002ac0c0002ac1e0002ac300002
ac420002ac800002acba0002ad440002ad820002ad940002ae1e0002aeba
0002aed40002aeee0002af000002af120002af240002af360002af480002
af5a0002af700002af820002af940002b09e0002b0b00002b0d20002b0d2
0002b10e0002b1580002b1a60002b1de0002b1de0002b2180002b22a0002
b28c0002b29e0002b3600002b3720002b3840002b3bc0002b3f20002b44c
0002b4ac0002b4be0002b4ce0002b4e00002b5a40002b6800002b6c00002
b6d20002b75a0002b7e20002b7f40002b83c0002b84e0002b8900002b926
0002b9380002b9c00002b9d20002ba120002baea0002bafc0002bbae0002
bbc00002bc3a0002bc4c0002bcd80002bcea0002bd860002bd980002be3a
0002be4c0002bf080002bf1a0002bfc40002bfd60002c0c20002c0d40002
c16e0002c1800002c2360002c2480002c2d20002c2e40002c3820002c394
0002c45c0002c46e0002c5320002c5440002c5f20002c6880002c6ac0002
c6d20002c6f60002c71c0002c7420002c7680002c78c0002c7b20002c7d2
0002c7f40002c8140002c8360002c8480002c8800002c8920002c8ee0002
ca060002ca160002cade0002cbb40002ccb20002ccc20002cd920002ce4a
0002cf0c0002cfe60002d10c0002d1c40002d2f00002d3ba0002d42e0002
d4440002d50c0002d60a0002d7040002d7c40002d8a60002d9920002daae
0002dbc00002dbd00002dc680002dd080002de180002ded80002df8a0002
e0880002e1740002e2600002e34e0002e36e0002e38e0002e3a60002e3be
0002e3d60002e3ee0002e4060002e41e0002e4360002e44e0002e4660002
e47e0002e4960002e4ae0002e4c60002e4de0002e4f60002e6580002e670
0002e6860002e69e0002e6be0002e6d40002e6ec0002e7040002e71c0002
e7fa0002e8c00002e8d80002e8ee0002e9060002e91c0002e9320002e94a
0002e9620002e9780002e9900002e9a60002e9bc0002e9d20002e9ea0002
ead60002eaee0002eb8a0002ecb80002ed9c0002edb40002edcc0002ede4
0002edfc0002ee140002ee2c0002ee420002ee5a0002ee720002ee880002
eea00002eeb00002eee20002eff20002f0020002f01a0002f0300002f134
0002f2600002f36e0002f3860002f39e0002f3b40002f3f80002f4100002
f4280002f43e0002f4740002f4ae0002f5040002f51c0002f5340002f58a
0002f5e00002f6000002f6180002f6300002f6480002f65e0002f6760002
f68c0002f6d00002f71e0002f7360002f74e0002f7640002f79a0002f7b0
0002f7cc0002f8020002f8580002f8700002f8880002f8a00002f8b80002
f8ce0002f9040002f95a0002f9720002f98a0002f9a20002f9ba0002f9d2
0002f9ea0002fa020002fa180002fa340002fa6a0002fa820002fa980002
fab00002fac60002fae40002fafc0002fb120002fb480002fb9e0002fbf6
0002fc440002fc9a0002fcb20002fcca0002fce00002fcf60002fd0e0002
fd260002fd3e0002fd540002fd6c0002fd820002fd980002fdce0002fdfc
0002fe260002fe540002ff880002ff980003008200030142000302020003
02a2000303360003046e0003056c0003064c0003075c000308500003095a
00030a5000030b3600030bfc00030cd800030cf000030e2c00030e3c0003
0f1600031022000311280003121800031304000313b2000314ae00031596
000316b4000317ac000317cc000317e4000317fc000318120003182a0003
1842000318580003187000031888000318a0000318b8000319860003199c
000319b2000319ca00031c0800031c1e00031c4400031c5c00031c7c0003
1c9200031caa00031cc200031cda00031cf200031d0800031d1e00031d34
00031d4c00031d6400031d7c00031d9200031daa00031dc200031dd80003
1dee00031e0600031eea00031f10000320660003219e0003227e00032296
000322ae000322c6000322dc000322f40003230c00032322000324020003
25380003266a000327c0000329220003293a00032a7e00032b5800032c18
00032c3000032c4600032c5c00032d7200032d9400032e8a00032f580003
309e00033196000331a80003324800033322000333320003334a00033362
00033378000333bc000333d4000333ec0003340200033438000334840003
34da000334f0000335060003355c000335b2000335d0000335f80003360e
000336260003363c000336660003367c000336c00003370e000337260003
373e000337560003376c000337a2000337ba000337e60003381c00033872
0003388a000338a2000338ba000338d2000338e80003391e000339740003
398a000339a0000339b8000339d0000339e800033a0000033a1800033a30
00033a4e00033a8400033a9c00033ab400033acc00033ae200033b020003
3b2800033b4000033b7600033bcc00033c2e00033c7c00033cd200033ce8
00033d0000033d1600033d2c00033d4400033d5c00033d7400033d8a0003
3da200033db800033dd000033e0600033e3c00033e6400033e7c00033e94
00033eac00033ee600033f1a00033f3200033f4a00034036000341220003
41e4000342de000342ee000343880003441c000344f60003461a0003462a
000346da00034798000348a8000348b80003498200034a3600034ae40003
4bb400034cce00034d8400034ec600034f7c00034ff2000350280003510c
0003520400035304000353d6000354b6000355aa000356ba000357ba0003
57ca0003587a0003592800035a3e00035b1600035bc800035bee00035cde
00035dc600035ed200035ef200035f1200035f2a00035f4200035f5a0003
5f7200035f8800035fa000035fb800035fd000035fe80003600000036018
00036030000360460003605c00036074000361ca000361e2000361f80003
621000036230000362460003625e000362760003628e0003637a0003642e
000364460003645c00036472000364880003649e000364b6000364ce0003
64e4000364fc00036512000365280003653e00036556000365660003657e
0003661e0003674800036828000368400003685800036870000368880003
68a0000368b8000368ce000368e6000368fe000369140003692c000369e2
00036a2e00036b3400036bbe00036bd600036bec00036cd800036cfa0003
6df200036f0a000370120003706c0003710e000371f80003720800037220
000372380003724e00037292000372aa000372c2000372d80003731c0003
7334000373780003738e000373a4000373e80003742c0003744a00037462
0003747a00037492000374a8000374c0000374d600037524000375680003
758000037598000375ae000375f2000376080003762400037668000376ac
000376c4000376dc000376f40003770c0003772200037766000377aa0003
77c2000377da000377f20003780a000378220003783a0003785200037868
00037884000378c8000378e0000378f8000379100003793a0003795a0003
79720003798a000379ce00037a1200037a5000037a9400037ad800037aee
00037b0600037b1c00037b3200037b4a00037b6200037b7a00037b900003
7ba800037bbe00037bd400037c1800037c5c00037c7200037c8a00037ca0
00037ce600037d2c00037d4400037d9800037ea600037f94000380880003
814c0003815c000381ec00038276000383ae0003851c0003868c000387e4
0003883a0003889000038a3a00038a6400038a8e00038c4600038e340003
9024000391fc00039252000392a8000394ca000394f40003951e0003965a
000396720003968a000396a200039700000397560003976e000397a00003
97ca0003998e000399a6000399be000399d600039a3400039a8a00039aa2
00039ad400039afe00039bfa00039ccc00039da200039eb200039f7a0003
a0a80003a1ac0003a2ac0003a3820003a45e0003a5a00003a6c80003a6d8
0003a88c0003a9760003a98c0003aaca0003aada0003abbe0003ac8a0003
ad8a0003ae460003af240003b0380003b04e0003b0640003b0740003b110
0003b12a0003b1f00003b26e0003b38c0003b4ae0003b5da0003b7280003
b8120003b8fa0003b9b40003ba860003bb8e0003bc7a0003bc8a0003bd3a
0003bdea0003bec00003bf720003c0480003c0b40003c1220003c2140003
c3060003c4520003c5040003c5260003c5d80003c6f40003c7be0003c88a
0003c9b20003cad80003cbb40003cc4e0003cd640003cdf40003ce8e0003
cf760003d08a0003d16e0003d2aa0003d35e0003d4120003d4c60003d57c
0003d6680003d6780003d76a0003d8900003d8a00003d9c20003da8c0003
dae00003dbea0003dc020003dc1a0003dd5c0003df040003e0a80003e1e2
0003e33e0003e4e40003e66c0003e76e0003e8480003e8600003e94e0003
ea380003eb4a0003ebe80003ecf40003ee9c0003efa80003f0660003f0ea
0003f1ce0003f2840003f3960003f41e0003f4a80003f5740003f6380003
f6480003f6580003f6ee0003f7ac0003f8460003f9000003fa3a0003fb86
0003fcb40003fd300003fdb20003fe680003ff560004004c000400b40004
014e000402080004032c00040448000404ca0004059c00040622000406fe
00040804000408e80004093e000409c200040a4000040a5000040b460004
0bf000040c8800040d9400040e7800040f7400040ff8000410aa0004115a
000412400004130400041360000413ec000414b000041520000416020004
16e2000417be0004184c0004196000041a0800041b1400041b9a00041c3e
00041d1600041d2600041df800041ec20004203200042042000420520004
20620004211e0004220e00042308000423180004239c000423ac000423bc
00042488000424980004253a0004259c000425f600042606000426160004
2626000426d2000427d6000427e6000428b6000429b000042a7200042b70
00042c6c00042d5c00042d6e00042d8000042d9200042da400042db60004
2dc800042e6400042f5e00042f70000430e60004313400043182000431b4
0004321c0004339c000433f2000434300004346e000435dc000436180004
3654000437da000438900004398e000439ac000439c2000439d8000439f0
00043af400043c4600043c5e00043c7600043c8c00043ca400043cbc0004
3cd200043cea00043d0200043d1a00043d3000043d4800043d6000043d78
00043d9000043da800043dc000043dd800043df000043e0800043e200004
3e3600043e4e00043e6600043e7c00043f7400043f8c000440b000044174
000441840004426e0004438e00044482000444920004454e0004455e0004
4612000446d200044748000447a000044832000449160004499600044a40
00044ab200044bdc00044cec00044dbe00044e9000044f44000450060004
512200045244000452ec000453ea000454ee000455f20004569000045754
0004580600045816000458f6000459f200045ad600045b9000045ba00004
5c7c00045c8c00045c9c00045d3e00045e0e00045ed200045ee200045ef2
00045f3c00045fbe00045fce00045fde0004603e00046094000460ec0004
61a2000462540004626400046274000462f00004636c000463be000463ce
000463de000463f000046402000464140004642600046468000464900004
64a2000464b4000464f00004652e000465760004659e0004661400046652
0004674600046756000467660004677600046786000467b6000467f20004
682e0004686a0004689a000469120004699800046a0800046a6a00046ac8
00046b4e00046bae00046c1800046c8c00046cfc00046d6600046e0c0004
6ea400046f1000046f9e00046ff80004705c00047106000471ac00047242
000472b200047334000473a00004745e0004751c000475c80004765a0004
76b80004771200047768000477ea00047868000478ee0004797a000479e6
00047a5600047ac400047b3400047bac00047c3000047cc000047d260004
7da000047e1c00047e9600047f3c00047fd400048064000480c200048160
000481b400048246000482ea000483940004842c00048488000484ea0004
8552000485f8000486a20004876c0004881200048872000488ca0004892a
000489b800048a3e00048acc00048b3000048b9a00048c0200048c6a0004
8cce00048d4600048dce00048e6200048ece00048f3600048fa20004904e
0004910e000491bc0004924a000492a80004930c0004937c000494200004
94c60004958a0004962c00049698000497280004979a00049832000498b0
0004992a0004999200049a2000049a7c00049ada00049b6000049bdc0004
9c4000049c9400049d0200049d6a00049dd000049e4e00049ec400049f3e
00049f7000049fcc0004a0280004a08c0004a12c0004a1ce0004a28c0004
a33c0004a3a20004a41a0004a4780004a5020004a59a0004a6280004a698
0004a6f60004a7840004a7f60004a8900004a9240004a97e0004a9ee0004
aa660004aac40004ab240004ab9e0004abfe0004ac580004acb40004ad1c
0004ad4e0004ad900004adce0004ae700004ae800004aeb20004aee60004
af1e0004af540004afd60004afe80004affa0004b00c0004b01e0004b030
0004b0620004b0920004b0c20004b0f20004b1640004b1b20004b1f60004
b2820004b31a0004b3aa0004b3e40004b43c0004b4800004b4920004b4a4
0004b4b60004b4c80004b58a0004b59a0004b5aa0004b5ba0004b5ca0004
b5da0004b5ea0004b5fa0004b60a0004b61c0004b62e0004b63e0004b64e
0004b65e0004b66e0004b67e0004b68e0004b69e0004b6ae0004b6be0004
b6ce0004b6de0004b6ee0004b6fe0004b70e0004b71e0004b72e0004b73e
0004b74e0004b75e0004b76e0004b77e0004b78e0004b89c0004b9aa0004
bab60004bbc40004bd0e0004be5a0004bfa00004c0e80004c1000004c118
0004c1300004c1480004c1580004c1680004c1780004c1880004c2400004
c28a0004c2d40004c3720004c38a0004c3a00004c43c0004c4fe0004c58e
0004c6560004c75a0004c8380004c8480004c9460004ca240004cb040004
cc420004cd960004cee40004cff80004d0fe0004d10e0004d11e0004d15c
0004d19a0004d1aa0004d26e0004d32e0004d3b40004d4780004d58c0004
d6780004d6880004d7c20004d95e0004d96e0004d97e0004d98e0004d9d0
0004da120004dac00004dad80004daee0004db900004dc4c0004dcde0004
dd980004dea80004df980004dfa80004dfca0004dfee0004e0120004e036
0004e0580004e07c0004e0a00004e0c40004e0e60004e1080004e1200004
e1380004e1500004e17a0004e1a60004e1d20004e1fe0004e2280004e254
0004e2800004e2ac0004e2c40004e2ee0004e31a0004e3460004e3720004
e39c0004e3c80004e3f40004e4200004e4420004e4680004e48e0004e4b0
0004e4d60004e4fc0004e51e0004e5400004e5620004e5880004e5ae0004
e5d20004e5f40004e61a0004e6400004e6640004e6880004e6ac0004e6c4
0004e6ee0004e71c0004e74a0004e7760004e7a00004e7ce0004e7fc0004
e8280004e8400004e86a0004e8980004e8c60004e8f20004e91c0004e94a
0004e9780004e9a40004e9c60004e9ec0004ea120004ea360004ea580004
ea7e0004eaa40004eac80004eaea0004eb0c0004eb240004eb3c0004eb5e
0004eb840004ebaa0004ebcc0004ebf20004ec180004ec3a0004ec5c0004
ec7e0004eca00004ecc60004ecec0004ed120004ed340004ed560004ed6c
0004ed820004eda40004edca0004edf00004ee140004ee360004ee5c0004
ee820004eea60004eec80004eeea0004ef020004ef2c0004ef5a0004ef88
0004efb40004efde0004f00c0004f03a0004f0660004f07e0004f0a80004
f0d60004f1040004f1300004f15a0004f1880004f1b60004f1e20004f1fa
0004f2120004f22a0004f2420004f25a0004f2720004f28a0004f2a20004
f2ba0004f2d20004f2e80004f3000004f3180004f3300004f3500004f370
0004f3900004f3b00004f3d00004f3f00004f4100004f4300004f4500004
f4700004f48e0004f4a60004f4bc0004f4d20004f4ea0004f5000004f516
0004f52e0004f5460004f55e0004f5760004f58e0004f5a60004f5be0004
f5d60004f5ee0004f6060004f61e0004f6360004f64c0004f6620004f680
0004f69e0004f6bc0004f6da0004f6f80004f7160004f7340004f7520004
f7700004f78e0004f7aa0004f7c00004f7d60004f7ec0004f8040004f81a
0004f8300004f8460004f85e0004f8760004f88e0004f8a60004f8bc0004
f8d40004f8ec0004f9040004f91c0004f9340004f94c0004f9640004f97c
0004f9940004f9ac0004f9c40004f9dc0004f9f40004fa0c0004fa240004
fa3c0004fa540004fa6c0004fa840004fa9c0004fab40004facc0004fae2
0004faf80004fb100004fb280004fb400004fb560004fb6c0004fb820004
fb9a0004fbb20004fbca0004fbe20004fbfa0004fc120004fc2a0004fc42
0004fc5a0004fc720004fc8a0004fca20004fcc20004fce20004fd020004
fd220004fd420004fd620004fd820004fda20004fdc20004fde20004fe02
0004fe260004fe4a0004fe6e0004fea40004fec80004feec0004ff100004
ff460004ff6a0004ff8e0004ffb00004ffc60004ffdc0004fff400050020
0005004c00050078000500b6000500e20005010e0005013a000501780005
0190000501bc000501e800050214000502520005027e000502aa000502d6
00050314000503380005035c00050380000503a4000503c8000503ec0005
041000050432000504560005047c000504a2000504da000504fe00050524
0005054a00050582000505a6000505ca000505ec00050604000506300005
065e0005068c000506cc000506f8000507260005075400050794000507ac
000507d8000508060005083400050874000508a0000508ce000508fc0005
093c0005095e00050984000509aa000509e200050a0400050a2a00050a50
00050a8800050aae00050ad400050b0200050b2400050b4600050b6a0005
0b8200050b9a00050bbe00050be400050c0a00050c2e00050c5400050c7a
00050c9e00050cc200050ce600050d0a00050d2e00050d5200050d760005
0d9a00050dbe00050de200050e1800050e4e00050e7200050e9600050eba
00050ede00050f0200050f2600050f5c00050f9200050fb600050fda0005
0ffc0005101e0005104000051062000510780005108e000510a4000510ba
000510de000511040005112a0005116200051186000511ac000511d20005
120a0005122e00051252000512760005128e000512ba000512e800051316
0005135600051382000513b0000513de0005141e00051436000514620005
1490000514be000514fe0005152a0005155600051582000515c2000515da
00051604000516300005165c00051688000516b2000516de0005170a0005
17360005174e00051778000517a6000517d4000518000005182a00051858
00051886000518b2000518ca000518f400051922000519500005197c0005
19a8000519d600051a0400051a3000051a4800051a7200051a9e00051aca
00051af600051b2000051b4c00051b7800051ba400051bbc00051be60005
1c1400051c4200051c6e00051c9800051cc600051cf400051d2000051d38
00051d6200051d9000051dbe00051dea00051e1400051e4200051e700005
1e9c00051f2600051fb00005200a000520620005210c000521d40005229c
000523b20005247a000525420005265e00052718000527d2000528d40005
295e000529bc00052a5000052ac200052b4a00052bd400052c5e00052dd0
00052ee000052f0200052fbc000530a20005329a000532b2000533ea0005
3564000536d0000537f0000538e0000539b800053ac200053c0600053c1e
00053cd200053ce200053dd800053ebe00053f9c0005406c000541920005
425000054372000544c2000544d2000544ea00054602000546d8000547ac
0005487c0005496a00054a6400054a7c00054a9400054aa400054aba0005
4b9000054ba800054bc000054bd600054cc800054ce000054cf800054d10
00054dd400054dec00054e0200054e1800054e2e00054e4400054e5a0005
4ef800054f10000550280005513a0005523c000552e4000553e4000554f8
0005561800055708000557e6000558cc0005597a00055aa000055bae0005
5d0600055e2200055e3a00055f0c00056004000561d8000561ee00056320
0005648a000565f40005671400056802000568d2000569da00056b220005
6b3a00056bee00056c9800056d8400056e6600056f3e0005701c0005713e
000571f80005730e000574540005746c0005757800057640000577140005
77e4000578d200057a1e00057a2e00057a4400057a5a00057a6a00057a80
00057b4800057b5e00057b7600057b8c00057c7c00057c9400057cac0005
7cc400057d8600057d9e00057db400057dca00057de000057df600057e0c
00057ea800057ec000057fe4000580f4000581f0000582000005830c0005
84460005855e0005863800058714000587fe000588b2000589d200058ad8
00058bb200058bee00058c1c00058c3200058d2400058f0a00058f200005
9058000591ba000591f60005931800059406000594d2000595de00059734
0005974c0005980000059810000598f2000599f600059ad600059bb40005
9cb800059d6800059e9200059ffc0005a00c0005a0240005a1560005a23c
0005a3220005a4120005a4f40005a6060005a61c0005a6320005a6420005
a6580005a72e0005a7460005a75e0005a7740005a7840005a79c0005a7b4
0005a7cc0005a7dc0005a7f40005a80a0005a8200005a8360005a84c0005
a8620005a8fe0005a9160005aa2c0005ab600005ac7c0005ad1c0005ae06
0005af120005b01e0005b10a0005b1fe0005b2e20005b39a0005b4960005
b5a20005b5a20005b5a20005b5a20005b5a20005b5a20005b5a20005b5a2
0005b5a20005b5a20005b5a20005b5a20005b5a20005b5ca0005b6260005
b6700005b6800005b6980005b6c40005b7240005b7d40005b7e40005b7f4
0005b80c0005b8240005b8360005b8de0005ba320005bbc80005bd2e0005
bdfe0005bf880005bfa00005c1500005c3940005c58e0005c74c0005c882
0005c9aa0005cb0e0005cd4a0005ce460005cffa0005d1660005d29e0005
d41e0005d56a0005d57a0005d7100005d7400005d7a60005d8420005d8a0
0005d90a0005d9500005d99a0005d9c40005d9ec0005da200005da500005
da840005dab60005dc020005dcbe0005ddb80005dece0005dfce0005e0ea
0005e1980005e2fa0005e3b00005e50e0005e6240005e7280005e8480005
e90c0005e9660005e9e80005e9fa0005ea820005ea940005eb1c0005eb2e
0005eb400005eb500005ec340005ecec0005f1420005f3a40005f4f60005
f6100005f6f40005f81e0005f9540005fac20005fc960005fca60005fcbc
0005fdda0005fed80006010800060120000601e8000602e6000604380006
05060006063e00060758000608c600060a9200060aa200060ab800060bd6
00060cd600060ef800060f2200060fec0006114600061298000613660006
149c000615d60006175e000619340006194400061a6e00061a8600061b96
00061dce00061de600061eaa00061f2e00061f8a000620d0000621160006
215a0006215a0006226600062266000622760006228600062374000623b4
000623de0006241e00062460000624c2000625b0000626d80006285a0006
296200062a9c00062bda00062c9c00062df000062f1e00062f7800062fd0
00063050000630ca000630ca000631c2000632de00063376000634100006
34e8000635fa000636bc0006378c0006382c0006391200063a0800063a1a
00063a6c00063ac400063b4800063c2000063d4400063de200063e360006
3e8e00063ee600063f3a0006400a000640c40006419c0006424a0006433e
0006441a000644f2000645a40006463e000646ca0006478c000648580006
48fe0006499c00064a9000064b9a00064c8c00064ce800064d9800064e2a
00064ed800064f860006508000065122000651c2000652d4000653b80006
545600065532000655b200065632000656b400065734000657b400065834
000658ae000659260006594c0006597200065998000659bc000659e00006
59f600065a0c00065a3800065a6400065a8e00065aba00065ae600065b10
00065b3c00065b6800065b9200065bbe00065bea00065c1400065c380006
5c5c00065c8800065cb400065ce000065d0c00065d3800065d6400065d90
00065da200065db400065dc600065dd800065dea00065dfc00065e0e0006
5e2000065e3200065e4400065e5600065e6800065e7a00065e8c00065e9e
00065eb000065ec200065ed400065ee600065ef800065f0a00065f1c0006
5f2e00065f4000065f5200065f6400065f7600065f8800065f9a00065fac
00065fbe00065fd000065fe200065ff400066006000660180006602a0006
603c0006604e00066060000660720006608400066096000660a8000660ba
000660cc000660de000660f0000661020006611400066126000661380006
614a0006615c0006616e0006618000066192000661a4000661b6000661c8
000661da000661ec00066206000662180006622a0006623c0006624e0006
6260000662720006628400066296000662a8000662ba000662cc000662de
000662f80006630a0006631c0006632e0006634000066362000663840006
639e000663b8000663ca000663dc000663ee000664000006641200066424
00066436000664480006645a0006646c0006647e00066490000664a20006
64b4000664c6000664d8000664ea000664fc0006650e0006652000066532
0006654400066556000665680006657a0006658c0006659e000665b00006
65c2000665d4000665e6000665f80006660a0006661c0006662e00066640
000666520006666400066676000666880006669a000666ac000666be0006
66d0000666e2000666f400066706000667180006672a0006673c0006674e
00066760000667720006678400066796000667a8000667ba000667cc0006
67de000667f000066802000668140006682e00066848000668620006687c
00066896000668b0000668ca000668e400066906000669280006694a0006
696c0006697e00066990000669a2000669b4000669c6000669d8000669ea
000669fc00066a0e00066a2000066a3200066a4400066a5600066a680006
6a7a00066a8c00066a9e00066ab000066ac200066ad400066ae600066af8
00066b0a00066b1c00066b2e00066b4000066b5200066b6400066b760006
6b8800066b9a00066bac00066bbe00066bd000066be200066bf400066c06
00066c1800066c2a00066c3c00066c4e00066c6000066c7200066c840006
6c9e00066cb800066cd200066cec00066cfe00066d1000066d2200066d34
00066d4600066d5800066d6a00066d7c00066d8e00066da000066db20006
6dd400066df800066e1c00066e4800066e6000066fe400066ffa00067012
000670280006714a000672f2000674200006754a000676b4000678660006
79ac00067b1600067c9800067da800067f4a000680be0006825a000683c8
000685a0000687c20006897800068b5000068d3e00068eb8000690c60006
92a80006948c000695ee00069722000698bc00069aa600069c2400069dc0
00069f740006a0b40006a28a0006a4300006a5da0006a6c20006a7460006
a84c0006a97c000100000f260120001000c3000700020010002f00650000
11900182000400010000002d022200000003000000000064000000000003
00000001000e00640000000300000002000e007200000003000000030024
00800000000300000004000e00640000000300000005001800a400000003
00000006000e00640000000300000007007600bc0000000300000008002a
000e000000030000000900200132000000030000000a02a0015200000003
0000000b005603f2000000030000000c002a0448000000030000000d0298
0472000000030000000e006c070a00010000000000000032077600010000
00000001000707a80001000000000002000707af00010000000000030012
07b60001000000000004000707a80001000000000005000c07c800010000
00000006000707a80001000000000007003b07d400010000000000080015
077d00010000000000090010080f000100000000000a0150081f00010000
0000000b002b096f000100000000000c0015099a000100000000000d014c
09af000100000000000e00360afb00030001040900000064000000030001
04090001000e00640003000104090002000e007200030001040900030024
00800003000104090004000e00640003000104090005001800a400030001
04090006000e00640003000104090007007600bc0003000104090008002a
000e000300010409000900200132000300010409000a02a0015200030001
0409000b005603f2000300010409000c002a0448000300010409000d0298
0472000300010409000e006c070a00a9002000320030003100330020004d
006900630072006f0073006f0066007400200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e00430061006c
00690062007200690052006500670075006c00610072004d006900630072
006f0073006f00660074003a002000430061006c00690062007200690056
0065007200730069006f006e00200035002e0038003600430061006c0069
00620072006900200069007300200061002000740072006100640065006d
00610072006b0020006f006600200074006800650020004d006900630072
006f0073006f00660074002000670072006f007500700020006f00660020
0063006f006d00700061006e006900650073002e004c0075006300280061
00730029002000640065002000470072006f006f007400430061006c0069
006200720069002000690073002000610020006d006f006400650072006e
002000730061006e0073002000730065007200690066002000660061006d
0069006c00790020007700690074006800200073007500620074006c0065
00200072006f0075006e00640069006e006700730020006f006e00200073
00740065006d007300200061006e006400200063006f0072006e00650072
0073002e0020004900740020006600650061007400750072006500730020
007200650061006c0020006900740061006c006900630073002c00200073
006d0061006c006c00200063006100700073002c00200061006e00640020
006d0075006c007400690070006c00650020006e0075006d006500720061
006c00200073006500740073002e0020004900740073002000700072006f
0070006f007200740069006f006e007300200061006c006c006f00770020
006800690067006800200069006d007000610063007400200069006e0020
00740069006700680074006c007900200073006500740020006c0069006e
006500730020006f0066002000620069006700200061006e006400200073
006d0061006c006c0020007400650078007400200061006c0069006b0065
002e002000430061006c0069006200720069002700730020006d0061006e
0079002000630075007200760065007300200061006e0064002000740068
00650020006e006500770020007200610073007400650072006900730065
00720020007400650061006d00200075007000200069006e002000620069
0067006700650072002000730069007a0065007300200074006f00200072
0065007600650061006c002000610020007700610072006d00200061006e
006400200073006f00660074002000630068006100720061006300740065
0072002e0068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f006300740066006f006e00740073
0068007400740070003a002f002f0066006f006e00740066006100620072
0069006b002e0063006f006d0059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
00680065002000450055004c004100200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c007500640065006400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e0074002e00200059006f00750020006d
006100790020006f006e006c0079002000280069002900200065006d0062
006500640020007400680069007300200066006f006e007400200069006e
00200063006f006e00740065006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200065
006d00620065006400640069006e00670020007200650073007400720069
006300740069006f006e007300200069006e0063006c0075006400650064
00200069006e0020007400680069007300200066006f006e0074003b0020
0061006e006400200028006900690029002000740065006d0070006f0072
006100720069006c007900200064006f0077006e006c006f006100640020
007400680069007300200066006f006e007400200074006f002000610020
007000720069006e0074006500720020006f00720020006f007400680065
00720020006f007500740070007500740020006400650076006900630065
00200074006f002000680065006c00700020007000720069006e00740020
0063006f006e00740065006e0074002e0068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0066
006f006e00740073002f00640065006600610075006c0074002e00610073
00700078a92032303133204d6963726f736f667420436f72706f72617469
6f6e2e20416c6c205269676874732052657365727665642e43616c696272
69526567756c61724d6963726f736f66743a2043616c6962726956657273
696f6e20352e383643616c6962726920697320612074726164656d61726b
206f6620746865204d6963726f736f66742067726f7570206f6620636f6d
70616e6965732e4c7563286173292064652047726f6f7443616c69627269
2069732061206d6f6465726e2073616e732073657269662066616d696c79
207769746820737562746c6520726f756e64696e6773206f6e207374656d
7320616e6420636f726e6572732e20497420666561747572657320726561
6c206974616c6963732c20736d616c6c20636170732c20616e64206d756c
7469706c65206e756d6572616c20736574732e204974732070726f706f72
74696f6e7320616c6c6f77206869676820696d7061637420696e20746967
68746c7920736574206c696e6573206f662062696720616e6420736d616c
6c207465787420616c696b652e2043616c696272692773206d616e792063
757276657320616e6420746865206e657720726173746572697365722074
65616d20757020696e206269676765722073697a657320746f2072657665
616c2061207761726d20616e6420736f6674206368617261637465722e68
7474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772
617068792f6374666f6e7473687474703a2f2f666f6e7466616272696b2e
636f6d596f75206d617920757365207468697320666f6e74206173207065
726d6974746564206279207468652045554c4120666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c7564656420746f20646973706c617920616e64207072696e7420636f
6e74656e742e20596f75206d6179206f6e6c792028692920656d62656420
7468697320666f6e7420696e20636f6e74656e74206173207065726d6974
7465642062792074686520656d62656464696e6720726573747269637469
6f6e7320696e636c7564656420696e207468697320666f6e743b20616e64
20286969292074656d706f726172696c7920646f776e6c6f616420746869
7320666f6e7420746f2061207072696e746572206f72206f74686572206f
75747075742064657669636520746f2068656c70207072696e7420636f6e
74656e742e687474703a2f2f7777772e6d6963726f736f66742e636f6d2f
7479706f6772617068792f666f6e74732f64656661756c742e6173707800
b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[16133 16057 16201 16317 16377 15605 16321 15945 16241 16097 16289 16273 16317
16337 16077 16121 16281 16273 16313 16333 16013 15817 16281 16337 16305 16361
15609 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 8556 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>BAAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>BAAAAA+Calibri AddT42Char 
BAAAAA+Calibri /CharStrings get begin
/P 87 def
end
BAAAAA+Calibri /Encoding get
dup 80 /P put
pop
end
%ADOEndSubsetFont
/CQVUHA+Calibri /BAAAAA+Calibri findfont ct_VMDictPut
/CQVUHA+Calibri*1 
[80{/.notdef}rp /P 175{/.notdef}rp]
CQVUHA+Calibri nf
CQVUHA+Calibri*1 [20.74 0 0 -20.74 0 0 ]msf
219.361 31.441 mo
(P)sh
/CQVUHA+Calibri*1 uf
/CQVUHA+Calibri uf
/BAAAAA+Calibri uf
/CQVUGZ+Calibri*1 uf
/CQVUGZ+Calibri uf
/DBAAAA+Calibri uf
%ADOBeginSubsetFont: DBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /DBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79669d86b6740000b09800001ba268656164ef1102a200000f640000
0036686865610dad126500000f9c00000024686d747852c1b9fb00000fc0
00003c946c6f63610161565200004c5400003c9c6d617870214703970000
88f0000000206e616d65e676aace0000891000000377707265706baf02fe
00008c8800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005dc2912a435e85f0f3cf500190800
00000000bbeb7ccc00000000ce0d5eedfbfafd8b09ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
023200940267002102e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329009003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<000000000000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae000002ae000002ae000002ae0000
02ae000002ae000002ae000002ae000002ae000002ae000002ae000002ae
000002ae000002ae000002ae000002ae0000040c0000040c0000040c0000
040c0000040c0000040c0000040c0000040c0000040c0000040c0000040c
0000040c0000040c0000040c0000040c0000040c0000040c0000040c0000
040c0000040c0000040c0000040c0000040c0000040c0000040c0000040c
0000040c0000040c0000054e0000054e0000054e0000054e0000054e0000
054e0000054e0000054e0000054e0000054e0000054e0000054e0000054e
0000054e0000054e0000054e0000054e0000054e0000054e0000054e0000
054e0000054e0000054e0000054e0000054e0000054e0000054e0000054e
0000054e0000054e0000054e0000054e0000054e0000054e0000054e0000
054e0000054e0000054e0000054e0000054e0000054e0000054e0000054e
0000054e0000054e0000054e0000054e0000054e0000054e0000054e0000
072800000728000007280000072800000728000007280000072800000728
00000728000007280000072800000728000007280000081a0000081a0000
081a0000081a0000081a0000081a0000081a0000081a0000081a0000081a
0000081a0000081a0000081a0000081a0000081a0000081a0000081a0000
081a0000081a0000081a0000081a0000081a0000081a0000081a0000081a
0000081a0000081a0000081a0000081a0000081a0000081a0000081a0000
093600000936000009360000093600000936000009360000093600000936
0000093600000936000009360000093600000a6400000a6400000a640000
0b5600000b5600000b5600000b5600000ce200000ce200000ce200000ce2
00000ce200000ce200000ce200000ce200000ce200000ce200000dda0000
0dda00000dda00000dda00000dda00000dda00000dda00000dda00000dda
00000dda00000dda00000dda00000dda00000dda00000dda00000dda0000
0dda00000dda00000dda00000dda00000dda00000dda00000dda00000dda
00000dda00000dda00000dda00000efa00000efa00000efa00000efa0000
0efa00000efa00000efa00000efa00000efa00000efa00000efa00000efa
00000efa00000efa00000efa00000efa00000efa00000efa00000efa0000
0efa00000efa00000efa00000efa00000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
0fb800000fb800000fb800000fb800000fb800000fb800000fb800000fb8
00000fb800000fb800000fb800000fb800000fb800000fb800000fb80000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001008000010080000100800001008
000010080000100800001008000010080000100800001008000010080000
100800001008000010080000100800001164000011640000116400001164
000011640000116400001164000011640000116400001164000011640000
116400001164000011640000116400001164000011640000116400001164
000011640000116400001164000011640000116400001164000011640000
116400001164000011640000116400001164000011640000116400001164
000012ca000014380000157800001760000018ea00001a5400001a640000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba200001ba200001ba200001ba200001ba200001ba200001ba2
00001ba200001ba200001ba200001ba200001ba200001ba200001ba20000
1ba200001ba2000100000f260120001000c3000700020010002f00650000
11900182000400010000000e00ae00000003000000000064000000000003
00000007007600640001000000000000003200da0001000000000003000e
010c0001000000000004000e011a0001000000000006000e012800010000
00000007003b01360003000104090000006401710003000104090001001c
01d50003000104090002000e01f10003000104090003001c01ff00030001
04090004001c021b0003000104090006001c023700030001040900070076
025300a9002000320030003100330020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303133204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
43434e4a4c502b43616c6962726943434e4a4c502b43616c696272694343
4e4a4c502b43616c6962726943616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e00a9002000320030003100330020004d006900
630072006f0073006f0066007400200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e00430043004e004a00
4c0050002b00430061006c00690062007200690052006500670075006c00
61007200430043004e004a004c0050002b00430061006c00690062007200
6900430043004e004a004c0050002b00430061006c006900620072006900
430043004e004a004c0050002b00430061006c0069006200720069004300
61006c006900620072006900200069007300200061002000740072006100
640065006d00610072006b0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000670072006f00750070002000
6f006600200063006f006d00700061006e006900650073002e00b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[7075 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 686 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>DBAAAA+Calibri AddT42Char 
2 1036 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>DBAAAA+Calibri AddT42Char 
2 2074 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>DBAAAA+Calibri AddT42Char 
2 2660 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>DBAAAA+Calibri AddT42Char 
2 3298 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>DBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>DBAAAA+Calibri AddT42Char 
DBAAAA+Calibri /CharStrings get begin
/a 258 def
/e 286 def
/o 381 def
/r 396 def
/t 410 def
end
DBAAAA+Calibri /Encoding get
dup 97 /a put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/CQVUHB+Calibri /DBAAAA+Calibri findfont ct_VMDictPut
/CQVUHB+Calibri*1 
[97{/.notdef}rp /a 3{/.notdef}rp /e 9{/.notdef}rp /o 2{/.notdef}rp /r 
/.notdef /t 139{/.notdef}rp]
CQVUHB+Calibri nf
CQVUHB+Calibri*1 [20.74 0 0 -20.74 0 0 ]msf
230.02 31.441 mo
(areto)
[9.87054 7.17422 10.2646 6.88403 0 ]xsh
gsave
-.120018 -.119995 mo
494.28 -.119995 li
494.28 317.88 li
-.120018 317.88 li
cp
eclp
-1.90735e-5 .480042 mo
-1.90735e-5 .240051 .359982 6.10352e-5 .599979 6.10352e-5 cv
493.92 6.10352e-5 li
494.16 6.10352e-5 494.4 .240051 494.4 .480042 cv
494.4 317.4 li
494.4 317.76 494.16 318 493.92 318 cv
.599979 318 li
.359982 318 -1.90735e-5 317.76 -1.90735e-5 317.4 cv
cp
1.19998 317.4 mo
.599979 316.8 li
493.92 316.8 li
493.32 317.4 li
493.32 .480042 li
493.92 1.08002 li
.599979 1.08002 li
1.19998 .480042 li
.140383 .108034 .108034 0 cmyk
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/CQVUHB+Calibri*1 uf
/CQVUHB+Calibri uf
/DBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
